{"version":3,"sources":["./src/app/core/login/login/login.component.ts","./src/app/core/login/login/login.service.ts","./src/app/core/login/login.component.ts","./src/app/core/login/login.component.html","./src/app/plano/plano.module.ts","./src/app/plano/plano.service.ts","./src/app/falha/cad-falha/cad-falha.component.ts","./src/app/falha/cad-falha/cad-falha.component.html","./src/app/compartilhado/componentes/confirmation-dialog/confirmation-dialog.component.ts","./src/app/compartilhado/componentes/confirmation-dialog/confirmation-dialog.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/core/auth/auth.guard.ts","./src/app/plano/cad-plano/cad-plano.component.ts","./src/app/plano/cad-plano/cad-plano.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/home/header/header.component.ts","./src/app/home/header/header.component.html","./src/app/home/inicio/inicio.component.ts","./src/app/home/inicio/inicio.component.html","./src/app/core/auth/auth.service.ts","./src/app/core/token/token.service.ts","./src/app/plano/lista-plano/lista-plano.component.ts","./src/app/plano/lista-plano/lista-plano.component.html","./src/app/app.module.ts","./src/app/home/home.module.ts","./src/app/falha/falha.module.ts","./src/app/compartilhado/componentes/app-msg-erro/app-msg-erro.module.ts","./src/app/falha/lista-falha/lista-falha.component.ts","./src/app/falha/lista-falha/lista-falha.component.html","./src/app/falha/falha.service.ts","./src/app/app.routing.module.ts","./src/app/core/core.module.ts","./src/app/compartilhado/componentes/app-msg-erro/app-msg-erro.component.ts","./src/app/compartilhado/componentes/app-msg-erro/app-msg-erro.component.html","./src/app/compartilhado/componentes/confirmation-dialog/confirmation-dialog.service.ts","./src/app/core/auth/request.interceptor.ts","./src/app/core/user/user.service.ts","./src/app/core/auth/login.guard.ts","./src/app/compartilhado/componentes/material/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as jtw_decode from 'jwt-decode';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { TokenService } from 'src/app/core/token/token.service';\r\nimport { Login } from './login';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  loginSubject = new BehaviorSubject<Login>(null);\r\n\r\n  constructor(private tokenService: TokenService) {\r\n    this.tokenService.hasToken() && this.decodeAndNotify();\r\n  }\r\n\r\n  setToken(token: string) {\r\n    this.tokenService.setToken(token);\r\n    this.decodeAndNotify()\r\n  }\r\n\r\n  getUser() {\r\n    return this.loginSubject.asObservable()\r\n  }\r\n\r\n  private decodeAndNotify() {\r\n    const token = this.tokenService.getToken();\r\n    const user = jtw_decode(token) as Login\r\n    this.loginSubject.next(user);\r\n  }\r\n\r\n  logout() {\r\n    this.tokenService.removeToken();\r\n    this.loginSubject.next(null);\r\n  }\r\n\r\n  isLogged() {\r\n    return this.tokenService.hasToken();\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport * as jtw_decode from 'jwt-decode';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { TokenService } from 'src/app/core/token/token.service';\r\nimport { Login } from './login';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  loginSubject = new BehaviorSubject<Login>(null);\r\n\r\n  constructor(private tokenService: TokenService) {\r\n    this.tokenService.hasToken() && this.decodeAndNotify();\r\n  }\r\n\r\n  setToken(token: string) {\r\n    this.tokenService.setToken(token);\r\n    this.decodeAndNotify()\r\n  }\r\n\r\n  getUser() {\r\n    return this.loginSubject.asObservable()\r\n  }\r\n\r\n  private decodeAndNotify() {\r\n    const token = this.tokenService.getToken();\r\n    const user = jtw_decode(token) as Login\r\n    this.loginSubject.next(user);\r\n  }\r\n\r\n  logout() {\r\n    this.tokenService.removeToken();\r\n    this.loginSubject.next(null);       \r\n    window.location.reload();\r\n  }\r\n\r\n  isLogged() {\r\n    return this.tokenService.hasToken();\r\n  }\r\n}","import { Component, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent{\r\n    \r\n    loginForm: FormGroup; //diretiva para controle do formulário\r\n    @Input() loginError: boolean = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.loginForm = this.formBuilder.group({\r\n        login: ['', Validators.required],\r\n        password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    login(){\r\n        const login = this.loginForm.get('login').value;\r\n        const password = this.loginForm.get('password').value;\r\n\r\n        this.authService\r\n        .authenticate(login, password)\r\n        .subscribe(\r\n            () => this.router.navigate(['home']), //informe a rota que irá abrir após o login \r\n            err => {\r\n            console.log(err);\r\n            this.loginError = true;\r\n            }\r\n        );\r\n    }\r\n}","<div class=\"bodyGeral\">\r\n    <div class=\"container\">\r\n        <form #form=\"ngForm\" method=\"get\" action=\"javascript: void(0);\" id=\"login-form\" autocomplete=\"off\" role=\"main\"\r\n            [formGroup]=\"loginForm\" (submit)=\"login()\" class=\"login-form\">\r\n            <h1 class=\"a11y-hidden\">Login</h1>\r\n            <div>\r\n                <label class=\"label-email\">\r\n                    <input type=\"text\" class=\"text\" formControlName=\"login\" type=\"text\" placeholder=\"Usuário\"\r\n                        class=\"form-control\" tabindex=\"1\" required />\r\n                    <span class=\"required\">Usuário</span>\r\n                </label>\r\n                <app-msg-erro mensagem=\"O usuário é obrigatório!\" *ngIf=\"loginForm.get('login').errors?.required && \r\n        (form.submitted || loginForm.get('login').touched)\">\r\n                </app-msg-erro>\r\n            </div>\r\n            <input type=\"checkbox\" name=\"show-password\" class=\"show-password a11y-hidden\" id=\"show-password\"\r\n                tabindex=\"3\" />\r\n            <label class=\"label-show-password\" for=\"show-password\">\r\n                <span>Mostrar Senha</span>\r\n            </label>\r\n\r\n            <div>\r\n                <label class=\"label-password\">\r\n                    <input type=\"text\" formControlName=\"password\" class=\"text form-control\" name=\"password\"\r\n                        placeholder=\"Senha\" tabindex=\"2\" required />\r\n                    <span class=\"required\">Senha</span>\r\n                </label>\r\n\r\n                <app-msg-erro mensagem=\"A senha é obrigatória!\" *ngIf=\"loginForm.get('password').errors?.required && \r\n            (form.submitted || loginForm.get('password').touched)\">\r\n                </app-msg-erro>\r\n            </div>\r\n            <input type=\"submit\" value=\"Entrar\" />\r\n            <!-- <div class=\"email\">\r\n            <a href=\"#\">Forgot password?</a>\r\n        </div> -->\r\n            <figure aria-hidden=\"true\">\r\n                <div class=\"person-body\"></div>\r\n                <div class=\"neck skin\"></div>\r\n                <div class=\"head skin\">\r\n                    <div class=\"eyes\"></div>\r\n                    <div class=\"mouth\"></div>\r\n                </div>\r\n                <div class=\"hair\"></div>\r\n                <div class=\"ears\"></div>\r\n                <div class=\"shirt-1\"></div>\r\n                <div class=\"shirt-2\"></div>\r\n            </figure>\r\n        </form>\r\n    </div>\r\n</div>","import { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\nimport { AppRoutingModule } from \"../app.routing.module\";\r\nimport { MaterialModule } from \"../compartilhado/componentes/material/material.module\";\r\nimport { CoreModule } from \"../core/core.module\";\r\n\r\nimport { CadPlanoComponent } from \"./cad-plano/cad-plano.component\";\r\nimport { ListaPlanoComponent } from \"./lista-plano/lista-plano.component\";\r\n\r\n@NgModule({\r\n    declarations:[\r\n        CadPlanoComponent,\r\n        ListaPlanoComponent\r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        BrowserModule,\r\n        CoreModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        FormsModule,\r\n        MaterialModule,\r\n    ],\r\n    exports:[\r\n\r\n    ]\r\n\r\n})\r\n\r\n\r\nexport class PlanoModule{\r\n\r\n}","import { Falha } from './../falha/falha';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { EMPTY } from \"rxjs\";\r\nimport { Observable } from \"rxjs\";\r\nimport { take } from \"rxjs/operators\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Plano } from \"./plano\";\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class PlanoService{\r\n    constructor(\r\n        private http: HttpClient\r\n    ){}\r\n\r\n\r\n    newPlano(plano: Plano){\r\n        return this.http.post(`${API}plano`, plano).pipe(take(1));\r\n    }\r\n\r\n    getAllPlano(): Observable<Plano[]>{\r\n        return this.http.get<Plano[]>(`${API}plano`)        \r\n    }\r\n\r\n    getIdEquals(): Observable<Falha[]>{\r\n        return this.http.get<Falha[]>(`${API}plano/falha`)        \r\n    }\r\n\r\n    getPlanoById(id){\r\n        if(!id) return EMPTY;\r\n        return this.http.get<Plano[]>(`${API}plano/find/${id}`).pipe(take(1));\r\n    }\r\n\r\n    updateStatus(id, status){\r\n        const alterValue = [id, status]\r\n        return this.http.put(`${API}plano/find/${alterValue[0]}`, alterValue).pipe(take(1));\r\n    }\r\n}","import { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationDialogService } from 'src/app/compartilhado/componentes/confirmation-dialog/confirmation-dialog.service';\r\nimport { Falha } from '../falha';\r\nimport { FalhaService } from '../falha.service';\r\n\r\n@Component({\r\n  selector: 'app-cad-falha',\r\n  templateUrl: './cad-falha.component.html',\r\n  styleUrls: ['./cad-falha.component.css'],\r\n  providers: [ConfirmationDialogService]\r\n})\r\nexport class CadFalhaComponent implements OnInit {\r\n\r\n\r\n  novaFalhaForm: FormGroup;\r\n  setores = ['Ortopedia', 'Plástica', 'Otorrino', 'Cardíaco', 'GO', 'Neuro', 'Geral']\r\n  salas = ['1', '2', '3', '4', '5', '6', '7', '8', 'GO 1', 'GO 2', 'Emergência']\r\n  causas = ['Atraso de Colaborador', 'Atraso de Paciente', 'Atraso de Documentação', 'Falta de Material', 'Falta de Assinatura', 'Falta de Leito', 'Risco para Paciente', 'Negligência do Processo', 'Tasy']\r\n  falhas = ['Atraso no Processo', 'Cancelamento do Processo', 'Transtorno ao Paciente', 'Risco para Paciente']\r\n\r\n  constructor(\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private elementRef: ElementRef,\r\n    private FalhaService: FalhaService\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.novaFalhaForm = this.formBuilder.group({\r\n      dataFalha: [null, [Validators.required]],\r\n      setorFalha: ['Centro Cirúrgico'],\r\n      salaFalha: [null, [Validators.required, Validators.minLength(1)]],\r\n      descricaoFalha: [null],\r\n      horaInicio: [null, [Validators.required, Validators.minLength(1)]],\r\n      horaFim: [null, [Validators.required, Validators.minLength(1)]],\r\n      duracaoFalha:[null],\r\n      causaFalha: [null, [Validators.required, Validators.minLength(1)]],\r\n      efeitoFalha: [null, [Validators.required, Validators.minLength(1)]],\r\n    })\r\n  }\r\n\r\n\r\n  addNovaFalha() {\r\n\r\n    this.addDuracao()\r\n    console.log(this.novaFalhaForm.value);\r\n    \r\n\r\n    this.confirmationDialogService.confirm('Por favor, confirme...', `Você realmente deseja adicionar a falha citada? Após adicionada, não será possível sua exclusão.`)\r\n      .then((confirmed) => {\r\n        if (confirmed == true) {\r\n          const novaFalha = this.novaFalhaForm.getRawValue() as Falha;\r\n          this.FalhaService.novaFalha(novaFalha).subscribe(\r\n            success => {\r\n              alert('Cadastro efetuado com sucesso!')\r\n              this.novaFalhaForm.reset();\r\n            },\r\n            error => {\r\n              alert('Não foi possível cadastrar a falha.')\r\n            }\r\n          )\r\n        }\r\n        else if (confirmed == false) {\r\n\r\n        }\r\n      }\r\n      )\r\n      .catch(() => console.log('Request denied.'));\r\n  }\r\n\r\n  addDuracao() {\r\n    let h1 = parseFloat(this.novaFalhaForm.value.horaInicio[0] + this.novaFalhaForm.value.horaInicio[1]);\r\n    let m1 = parseFloat(this.novaFalhaForm.value.horaInicio[3] + this.novaFalhaForm.value.horaInicio[4]);\r\n    let h2 = parseFloat(this.novaFalhaForm.value.horaFim[0] + this.novaFalhaForm.value.horaFim[1]);\r\n    let m2 = parseFloat(this.novaFalhaForm.value.horaFim[3] + this.novaFalhaForm.value.horaFim[4]);\r\n    let t1 = (h1 * 60) + m1;\r\n    let t2 = (h2 * 60) + m2;\r\n    if (t1 > t2) {\r\n      h2 = h2 + 24;\r\n      t2 = (h2 * 60) + m2;\r\n    }\r\n    let t3 = t2 - t1;\r\n    let t4 = Math.floor(t3 / 60);\r\n    let t5 = t3 - (t4 * 60);\r\n\r\n    let horaFinal\r\n    let minFinal\r\n\r\n    if(t4 < 10){\r\n      horaFinal = \"\" + 0 + t4\r\n    }else{\r\n      horaFinal = t4\r\n    }\r\n\r\n    if(t5 < 10){\r\n      minFinal = \"\" + 0 + t5\r\n    }else{\r\n      minFinal = t5\r\n    }\r\n\r\n    let res = horaFinal + \"h\" + \":\" + minFinal + \"min\"\r\n\r\n    this.novaFalhaForm.patchValue({duracaoFalha: res})\r\n\r\n  }\r\n\r\n  checkError(field) {\r\n    return {\r\n      'has-danger': this.touchedVerify(field)\r\n    };\r\n  }\r\n\r\n  formReset() {\r\n    this.novaFalhaForm.reset();\r\n  }\r\n\r\n  touchedVerify(field) {\r\n    return !this.novaFalhaForm.get(field).valid && this.novaFalhaForm.get(field).touched;\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <form [formGroup]=\"novaFalhaForm\" (ngSubmit)=\"addNovaFalha()\" novalidate>\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm mt-4\">\r\n                <h1>Info.</h1>\r\n                <p>Os campos abaixos devem serem preenchidos com as informações da falha.</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('dataFalha')\">\r\n                <label class=\"form-control-label\" for=\"dataFalha\">Data da Falha <em>*</em></label>\r\n                <input type=\"date\" class=\"form-control\" formControlName=\"dataFalha\" id=\"dataFalha\">\r\n                <div *ngIf=\"touchedVerify('dataFalha')\" class=\"form-control-feedback\">Data da falha\r\n                    inválida.\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('setorFalha')\">\r\n                <label class=\"form-control-label\" for=\"setorFalha\">Setor <em>*</em></label>\r\n                <select id=\"setorFalha\" class=\"form-control\" formControlName=\"setorFalha\" disabled>\r\n                    <option selected>Centro Cirúrgico</option>\r\n                    <option *ngFor=\"let setor of setores\">{{setor}}</option>\r\n                </select>\r\n                <div *ngIf=\"touchedVerify('setorFalha')\" class=\"form-control-feedback\">Por favor, insira um setor\r\n                    válido.\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('salaFalha')\">\r\n                <label class=\"form-control-label\" for=\"salaFalha\">Sala <em>*</em></label>\r\n                <select id=\"salaFalha\" class=\"form-control\" formControlName=\"salaFalha\">\r\n                    <option></option>\r\n                    <option *ngFor=\"let sala of salas\">{{sala}}</option>\r\n                </select>\r\n                <div *ngIf=\"touchedVerify('salaFalha')\" class=\"form-control-feedback\">Por favor, insira uma sala válida.\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"form-group col-md-8\">\r\n                <label class=\"form-control-label\" for=\"descricaoFalha\">Especificação da Falha</label>\r\n                <p>Especifique o que gerou a falha. Ex.: \"A falta de um bisturi.\", o \"bisturi\" é a especificação.</p>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"descricaoFalha\" id=\"descricaoFalha\">\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"form-group col-md-2\">\r\n                <label class=\"form-control-label\" for=\"horaInicio\">Hora de Início <em>*</em></label>\r\n                <input type=\"time\" class=\"form-control\" formControlName=\"horaInicio\" id=\"horaInicio\">\r\n                <div *ngIf=\"touchedVerify('horaInicio')\" class=\"form-control-feedback\">Campo Obrigatório\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group col-md-2\">\r\n                <label class=\"form-control-label\" for=\"horaFim\">Hora do Fim <em>*</em></label>\r\n                <input type=\"time\" class=\"form-control\" formControlName=\"horaFim\" id=\"horaFim\" [attr.disabled]=\"(!novaFalhaForm.value.horaInicio) || null\">\r\n                <div *ngIf=\"touchedVerify('horaFim')\" class=\"form-control-feedback\">Campo Obrigatório\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"form-group col-md-4\">\r\n                <label class=\"form-control-label\" for=\"causaFalha\">Causa de Atraso <em>*</em></label>\r\n                <select id=\"causaFalha\" class=\"form-control\" formControlName=\"causaFalha\">\r\n                    <option></option>\r\n                    <option *ngFor=\"let causa of causas\">{{causa}}</option>\r\n                </select>\r\n                <div *ngIf=\"touchedVerify('causaFalha')\" class=\"form-control-feedback\">Campo Obrigatório\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group col-md-4\">\r\n                <label class=\"form-control-label\" for=\"efeitoFalha\">Efeito Ocasionado <em>*</em></label>\r\n                <select id=\"efeitoFalha\" class=\"form-control\" formControlName=\"efeitoFalha\">\r\n                    <option></option>\r\n                    <option *ngFor=\"let falha of falhas\">{{falha}}</option>\r\n                </select>\r\n                <div *ngIf=\"touchedVerify('efeitoFalha')\" class=\"form-control-feedback\">Campo Obrigatório\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row justify-content-end\">\r\n            <div class=\"align-self-end mb-4\">\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"formReset()\">Limpar</button>\r\n                <button type=\"submit\" class=\"btn btn-success mx-3\" [attr.disabled]=\"novaFalhaForm.invalid || null\">Enviar</button>\r\n                <!-- <button type=\"submit\" class=\"btn btn-success mx-3\">Enviar</button> -->\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-dialog',\r\n  templateUrl: './confirmation-dialog.component.html',\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n\r\n  @Input() title: string;\r\n  @Input() message: string;\r\n  @Input() btnOkText: string;\r\n  @Input() btnCancelText: string;\r\n\r\n  constructor(private activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public decline() {\r\n    this.activeModal.close(false);\r\n  }\r\n\r\n  public accept() {\r\n    this.activeModal.close(true);\r\n  }\r\n\r\n  public dismiss() {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">{{ title }}</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  {{ message }}\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{ btnCancelText }}</button>\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"accept()\">{{ btnOkText }}</button>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Login } from '../core/login/login/login';\r\nimport { LoginService } from '../core/login/login/login.component';\r\n\r\n@Component({\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n    login: Login;\r\n\r\n    constructor(\r\n        private loginService: LoginService,\r\n        private router: Router\r\n    ) {\r\n\r\n    }\r\n\r\n\r\n    logout() {\r\n        this.loginService.logout();\r\n        this.router.navigate(['login']);\r\n    }\r\n}","<body>\r\n    <nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a class=\"navbar-brand text-center scol-sm-3 col-md-2 mr-0\" href=\"#\">HCSL - FMEA</a>\r\n        <!-- <input class=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"> -->\r\n        <ul class=\"navbar-nav px-4\">\r\n            <li class=\"nav-item text-nowrap\">\r\n                <a class=\"nav-link\" href=\"#\" (click)=\"logout()\">Sair</a>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <nav class=\"col-md-2 d-none d-md-block bg-light sidebar\">\r\n                <div class=\"sidebar-sticky\">\r\n                    <ul class=\"nav flex-column\">\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link active\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-home\">\r\n                                    <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\r\n                                    <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\r\n                                </svg>\r\n                                Home <span class=\"sr-only\">(current)</span>\r\n                            </a>\r\n                        </li>\r\n\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-shopping-cart\">\r\n                                    <circle cx=\"9\" cy=\"21\" r=\"1\"></circle>\r\n                                    <circle cx=\"20\" cy=\"21\" r=\"1\"></circle>\r\n                                    <path d=\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\r\n                                </svg>\r\n                                Shop\r\n                            </a>\r\n                        </li> -->\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-users\">\r\n                                    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\r\n                                    <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\r\n                                    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\r\n                                    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\r\n                                </svg>\r\n                                Customers\r\n                            </a>\r\n                        </li> -->\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-bar-chart-2\">\r\n                                    <line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line>\r\n                                    <line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line>\r\n                                    <line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line>\r\n                                </svg>\r\n                                Reports\r\n                            </a>\r\n                        </li> -->\r\n                    </ul>\r\n\r\n                    <h6\r\n                        class=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\r\n                        <span>Análise de Efeitos de Falha</span>\r\n                        <a class=\"d-flex align-items-center text-muted\" href=\"#\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n                                stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                class=\"feather feather-plus-circle\">\r\n                                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                                <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line>\r\n                                <line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>\r\n                            </svg>\r\n                        </a>\r\n                    </h6>\r\n                    <ul class=\"nav flex-column mb-2\">\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" [routerLink]=\"'./cadastrar/falha'\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-file\">\r\n                                    <path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path>\r\n                                    <polyline points=\"13 2 13 9 20 9\"></polyline>\r\n                                </svg>\r\n                                Cadastrar falha\r\n                            </a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" [routerLink]=\"'./listar/falhas'\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-layers\">\r\n                                    <polygon points=\"12 2 2 7 12 12 22 7 12 2\"></polygon>\r\n                                    <polyline points=\"2 17 12 22 22 17\"></polyline>\r\n                                    <polyline points=\"2 12 12 17 22 12\"></polyline>\r\n                                </svg>\r\n                                Falhas\r\n                            </a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" [routerLink]=\"'./lista/plano'\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                                    class=\"bi bi-list\" viewBox=\"0 0 16 16\">\r\n                                    <path fill-rule=\"evenodd\"\r\n                                        d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\" />\r\n                                    </svg>\r\n                                Listar planos\r\n                            </a>\r\n                        </li>\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-file-text\">\r\n                                    <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n                                    <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n                                    <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\r\n                                    <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\r\n                                    <polyline points=\"10 9 9 9 8 9\"></polyline>\r\n                                </svg>\r\n                                Year-end sale\r\n                            </a>\r\n                        </li> -->\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n            <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n                <div class=\"chartjs-size-monitor\"\r\n                    style=\"position: absolute; inset: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;\">\r\n                    <div class=\"chartjs-size-monitor-expand\"\r\n                        style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;\">\r\n                        <div style=\"position:absolute;width:1000000px;height:1000000px;left:0;top:0\"></div>\r\n                    </div>\r\n                    <div class=\"chartjs-size-monitor-shrink\"\r\n                        style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;\">\r\n                        <div style=\"position:absolute;width:200%;height:200%;left:0; top:0\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container mt-4\">\r\n                    <router-outlet></router-outlet>\r\n                </div>\r\n\r\n            </main>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Software FMEA</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                O Software FMEA é um software corporativo que ajuda o hospital no gerenciamento da Análise dos Modos\r\n                de Falha e seus Efeitos. Por meio de uma abordagem proativa, o Software observa os defeitos\r\n                ocorridos, permitindo que o hospital garanta que a falha não corra novamente em suas atividades.\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:3000/api/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserService } from '../user/user.service';\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router) {}\r\n\r\n    /* Guarda de rotas para ser utilizada nas rotas \r\n       que não devem ser acessadas se o usuário não estiver logado*/\r\n       \r\n    canActivate(\r\n        route: ActivatedRouteSnapshot, \r\n        state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n            if(!this.userService.isLogged()){\r\n                this.router.navigate(\r\n                    ['login'],\r\n                    {\r\n                        queryParams: {\r\n                            fromUrl: state.url\r\n                        }\r\n                    }\r\n                );\r\n                return false;\r\n            }\r\n            return true;\r\n    }\r\n}","import { FalhaService } from './../../falha/falha.service';\r\nimport { Falha } from './../../falha/falha';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { map, switchMap } from \"rxjs/operators\";\r\nimport { ConfirmationDialogService } from \"src/app/compartilhado/componentes/confirmation-dialog/confirmation-dialog.service\";\r\nimport { Login } from \"src/app/core/login/login/login\";\r\nimport { LoginService } from \"src/app/core/login/login/login.service\";\r\nimport { Plano } from \"../plano\";\r\nimport { PlanoService } from \"../plano.service\";\r\n\r\n@Component({\r\n    selector: 'app-cad-plano',\r\n    templateUrl: './cad-plano.component.html',\r\n    styleUrls: ['./cad-plano.component.css'],\r\n    providers: [ConfirmationDialogService]\r\n})\r\n\r\nexport class CadPlanoComponent implements OnInit {\r\n\r\n    novoPlanoForm: FormGroup\r\n    login: Login\r\n\r\n    constructor(\r\n        public confirmationDialogService: ConfirmationDialogService,\r\n        private formBuilder: FormBuilder,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private loginService: LoginService,\r\n        private PlanoService: PlanoService,\r\n        private FalhaService: FalhaService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.loginService.getUser().subscribe(result => {\r\n            this.login = result;\r\n        })\r\n\r\n        this.novoPlanoForm = this.formBuilder.group({\r\n            fk_id_falha: [null, [Validators.required, Validators.minLength(1)]],\r\n            plano_acao: [null, [Validators.required, Validators.minLength(1)]],\r\n            responsavel: [null, [Validators.required, Validators.minLength(1)]],\r\n            objetivo: [null, [Validators.required, Validators.minLength(1)]],\r\n            criacao_data: [null, [Validators.required, Validators.minLength(1)]],\r\n            o_que: [null, [Validators.required, Validators.minLength(1)]],\r\n            por_que: [null, [Validators.required, Validators.minLength(1)]],\r\n            onde: [null, [Validators.required, Validators.minLength(1)]],\r\n            quem: [null, [Validators.required, Validators.minLength(1)]],\r\n            quando: [null, [Validators.required, Validators.minLength(1)]],\r\n            como: [null, [Validators.required, Validators.minLength(1)]],\r\n            quanto: [null, [Validators.required, Validators.minLength(1)]],\r\n            status_plano: ['A fazer', [Validators.required, Validators.minLength(1)]],\r\n            gravidade: [null, [Validators.required, Validators.minLength(1)]],\r\n            urgencia: [null, [Validators.required, Validators.minLength(1)]],\r\n            tendencia: [null, [Validators.required, Validators.minLength(1)]],\r\n            prioridade: [null, [Validators.required, Validators.minLength(1)]],\r\n        })\r\n\r\n        this.getDataAtual()\r\n\r\n        this.route.params\r\n            .pipe(\r\n                map((params: any) => params['id']),\r\n                switchMap(id => this.FalhaService.getIdFalha(id))\r\n\r\n            )\r\n            .subscribe(falha => this.preencherEvento(falha)\r\n            );\r\n\r\n    }\r\n\r\n    getDataAtual() {\r\n        let data = new Date(),\r\n            dia = data.getDate().toString(),\r\n            diaF = (dia.length == 1) ? '0' + dia : dia,\r\n            mes = (data.getMonth() + 1).toString(), //+1 pois no getMonth Janeiro começa com zero.\r\n            mesF = (mes.length == 1) ? '0' + mes : mes,\r\n            anoF = data.getFullYear(),\r\n            hora = data.getHours(),\r\n            minutos = data.getMinutes()\r\n\r\n        let dataNotificacao = anoF + \"-\" + mesF + \"-\" + diaF + \" \" + hora + \":\" + minutos\r\n\r\n        this.novoPlanoForm.patchValue({ criacao_data: dataNotificacao })\r\n    }\r\n\r\n    addNovoPlano() {\r\n\r\n        this.novoPlanoForm.patchValue({ prioridade: Number(this.novoPlanoForm.value.gravidade) + Number(this.novoPlanoForm.value.tendencia) + Number(this.novoPlanoForm.value.urgencia) })\r\n        let elementoIncidente = <HTMLInputElement>document.getElementById('falha_ocorrida')\r\n\r\n        console.log(this.novoPlanoForm.value)\r\n\r\n        this.confirmationDialogService.confirm('Por favor, confirme...', `O Plano de Ação \"${this.novoPlanoForm.value.plano_acao}\" será adicionado a falha \"${elementoIncidente.value}\". Deseja prosseguir?`)\r\n            .then((confirmed) => {\r\n                if (confirmed == true) {\r\n                    const novoPlano = this.novoPlanoForm.getRawValue() as Plano;\r\n                    this.PlanoService.newPlano(novoPlano).subscribe(\r\n                        success => {\r\n                            alert('Plano de Ação cadastro com sucesso!')\r\n                            this.formReset()\r\n                            /* this.newFormPlano(); */\r\n                        },\r\n                        error => {\r\n                            alert('Não foi possível cadastrar o plano de ação. Tente novamente.')\r\n                        }\r\n                    )\r\n                }\r\n                else if (confirmed == false) {\r\n\r\n                }\r\n            }\r\n            )\r\n            .catch(() => console.log('Request denied.'));\r\n\r\n    }\r\n\r\n    preencherEvento(falha: Falha) {\r\n        this.novoPlanoForm.patchValue({\r\n            fk_id_falha: falha[0].id\r\n        })\r\n\r\n        let elementoFalha = <HTMLInputElement>document.getElementById('descricao_falha')\r\n        elementoFalha.value = falha[0].descricaoFalha\r\n        let elementoOcorrencia = <HTMLInputElement>document.getElementById('falha_ocorrida')\r\n        elementoOcorrencia.value = falha[0].causaFalha\r\n\r\n    }\r\n\r\n    formReset() {\r\n        this.novoPlanoForm.reset();\r\n        this.router.navigate(['/home/cadastrar/plano']);\r\n    }\r\n\r\n    checkError(field) {\r\n        return {\r\n            'has-danger': this.touchedVerify(field)\r\n        };\r\n    }\r\n\r\n    touchedVerify(field) {\r\n        return !this.novoPlanoForm.get(field).valid && this.novoPlanoForm.get(field).touched;\r\n    }\r\n\r\n}","<!-- <div class=\"container\" *ngIf=\"login.perfil === 'user'\">\r\n    <app-denied-page></app-denied-page>\r\n</div> -->\r\n<div class=\"container mt-5\">\r\n\r\n\r\n    <form [formGroup]=\"novoPlanoForm\" (ngSubmit)=\"addNovoPlano()\" novalidate>\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm mt-4\">\r\n                <h1>Informações sobre o Incidente</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-md-5\">\r\n                <label class=\"form-control-label\" for=\"descricao_falha\">Descrição<em>*</em></label>\r\n                <input type=\"text\" class=\"form-control\" id=\"descricao_falha\" disabled>\r\n            </div>\r\n            <div class=\"form-group col-md-6\">\r\n                <label class=\"form-control-label\" for=\"falha_ocorrida\">Falha ocorrida<em>*</em></label>\r\n                <input type=\"text\" class=\"form-control\" id=\"falha_ocorrida\" maxlength=\"50\" disabled>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm mt-4\">\r\n                <h1>Cadastro de Plano de Ação</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-md-6\" [ngClass]=\"checkError('plano_acao')\">\r\n                <label class=\"form-control-label\" for=\"plano_acao\">Plano de Ação <em>*</em></label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"plano_acao\" id=\"plano_acao\" maxlength=\"50\">\r\n                <div *ngIf=\"touchedVerify('plano_acao')\" class=\"form-control-feedback\">Por favor, insira um Plano de\r\n                    Ação válido.\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-4\" [ngClass]=\"checkError('responsavel')\">\r\n                <label class=\"form-control-label\" for=\"responsavel\">Responsável<em>*</em></label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"responsavel\" id=\"responsavel\" maxlength=\"50\">\r\n                <div *ngIf=\"touchedVerify('responsavel')\" class=\"form-control-feedback\">Responsável inválido.\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n\r\n            <div class=\"form-group col-md-8\" [ngClass]=\"checkError('objetivo')\">\r\n                <label class=\"form-control-label\" for=\"objetivo\">Objetivo<em>*</em></label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"objetivo\" id=\"objetivo\" maxlength=\"50\">\r\n                <div *ngIf=\"touchedVerify('objetivo')\" class=\"form-control-feedback\">Objetivo inválido.\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"form-group col-md-4\" [ngClass]=\"checkError('setor')\">\r\n                <label class=\"form-control-label\" for=\"setor\">Setor <em>*</em></label>\r\n                <select id=\"setor\" class=\"form-control\" (click)=\"timeCounter()\" [(ngModel)]=\"selectedSetor\"\r\n                    formControlName=\"setor\">\r\n                    <option></option>\r\n                    <option *ngFor=\"let setor of setores\">{{setor.setor}}</option>\r\n                </select>\r\n                <div *ngIf=\"touchedVerify('setor')\" class=\"form-control-feedback\">Por favor, insira um setor válido.\r\n                </div>\r\n            </div> -->\r\n        </div>\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm mt-4\">\r\n                <h1>5W</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-md-2\" [ngClass]=\"checkError('o_que')\">\r\n                <label class=\"form-control-label\" for=\"o_que\">O quê? (What?)<em>*</em></label>\r\n                <textarea class=\"form-control\" rows=\"1\" formControlName=\"o_que\" id=\"o_que\"></textarea>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-md-2\" [ngClass]=\"checkError('o_que')\">\r\n                <label class=\"form-control-label\" for=\"por_que\">Por que? (Why?)<em>*</em></label>\r\n                <textarea class=\"form-control\" rows=\"1\" formControlName=\"por_que\" id=\"por_que\"></textarea>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-md-2\" [ngClass]=\"checkError('onde')\">\r\n                <label class=\"form-control-label\" for=\"onde\">Onde? (Where?)<em>*</em></label>\r\n                <textarea class=\"form-control\" rows=\"1\" formControlName=\"onde\" id=\"onde\"></textarea>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-md-2\" [ngClass]=\"checkError('quem')\">\r\n                <label class=\"form-control-label\" for=\"quem\">Quem? (Who?)<em>*</em></label>\r\n                <textarea class=\"form-control\" rows=\"1\" formControlName=\"quem\" id=\"quem\"></textarea>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-md-2\" [ngClass]=\"checkError('quando')\">\r\n                <label class=\"form-control-label\" for=\"quando\">Quando? (When?)<em>*</em></label>\r\n                <input type=\"Date\" class=\"form-control\" formControlName=\"quando\" id=\"quando\">\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm mt-4\">\r\n                <h1>2H</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-md-2\" [ngClass]=\"checkError('como')\">\r\n                <label class=\"form-control-label\" for=\"como\">Como? (How?)<em>*</em></label>\r\n                <textarea class=\"form-control\" rows=\"1\" formControlName=\"como\" id=\"como\"></textarea>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('quanto')\">\r\n                <label class=\"form-control-label\" for=\"quanto\">Quanto custa? (How much?)<em>*</em></label>\r\n                <textarea class=\"form-control\" rows=\"1\" formControlName=\"quanto\" id=\"quanto\"></textarea>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm mt-4\">\r\n                <h1>Matriz GUT</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('gravidade')\">\r\n                <label class=\"form-control-label\" for=\"gravidade\">Gravidade<em>*</em></label>\r\n                <select id=\"setor\" class=\"form-control\" formControlName=\"gravidade\">\r\n                    <option value=9>Muito Impactante</option>\r\n                    <option value=3>Impactante</option>\r\n                    <option value=1>Pouco Impactante</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('urgencia')\">\r\n                <label class=\"form-control-label\" for=\"urgencia\">Urgência<em>*</em></label>\r\n                <select id=\"setor\" class=\"form-control\" formControlName=\"urgencia\">\r\n                    <option value=9>Muito Viável</option>\r\n                    <option value=3>Viável</option>\r\n                    <option value=1>Pouco Viável</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('tendencia')\">\r\n                <label class=\"form-control-label\" for=\"tendencia\">Tendência<em>*</em></label>\r\n                <select id=\"setor\" class=\"form-control\" formControlName=\"tendencia\">\r\n                    <option value=9>Compensa Muito</option>\r\n                    <option value=3>Compensa</option>\r\n                    <option value=1>Não Compensa</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row justify-content-end\">\r\n            <div class=\"align-self-end\">\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"formReset()\">Limpar</button>\r\n                <!-- <button type=\"submit\" class=\"btn btn-success mx-3\" [attr.disabled]=\"!novoEventoForm.valid\">Enviar</button> -->\r\n                <button type=\"submit\" class=\"btn btn-success mx-3\">Enviar</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'plano-terapeutico';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<body>\r\n    <nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a class=\"navbar-brand text-center scol-sm-3 col-md-2 mr-0\" href=\"#\">HCSL - FMEA</a>\r\n        <!-- <input class=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"> -->\r\n        <ul class=\"navbar-nav px-4\">\r\n            <li class=\"nav-item text-nowrap\">\r\n                <a class=\"nav-link\" href=\"#\">Sair</a>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <nav class=\"col-md-2 d-none d-md-block bg-light sidebar\">\r\n                <div class=\"sidebar-sticky\">\r\n                    <ul class=\"nav flex-column\">\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link active\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-home\">\r\n                                    <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\r\n                                    <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\r\n                                </svg>\r\n                                Home <span class=\"sr-only\">(current)</span>\r\n                            </a>\r\n                        </li>\r\n\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-shopping-cart\">\r\n                                    <circle cx=\"9\" cy=\"21\" r=\"1\"></circle>\r\n                                    <circle cx=\"20\" cy=\"21\" r=\"1\"></circle>\r\n                                    <path d=\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\r\n                                </svg>\r\n                                Shop\r\n                            </a>\r\n                        </li> -->\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-users\">\r\n                                    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\r\n                                    <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\r\n                                    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\r\n                                    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\r\n                                </svg>\r\n                                Customers\r\n                            </a>\r\n                        </li> -->\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-bar-chart-2\">\r\n                                    <line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line>\r\n                                    <line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line>\r\n                                    <line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line>\r\n                                </svg>\r\n                                Reports\r\n                            </a>\r\n                        </li> -->\r\n                    </ul>\r\n\r\n                    <h6\r\n                        class=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\r\n                        <span>Análise de Efeitos de Falha</span>\r\n                        <a class=\"d-flex align-items-center text-muted\" href=\"#\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n                                stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                class=\"feather feather-plus-circle\">\r\n                                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                                <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line>\r\n                                <line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>\r\n                            </svg>\r\n                        </a>\r\n                    </h6>\r\n                    <ul class=\"nav flex-column mb-2\">\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-file\">\r\n                                    <path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path>\r\n                                    <polyline points=\"13 2 13 9 20 9\"></polyline>\r\n                                </svg>\r\n                                Cadastrar falha\r\n                            </a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-layers\">\r\n                                    <polygon points=\"12 2 2 7 12 12 22 7 12 2\"></polygon>\r\n                                    <polyline points=\"2 17 12 22 22 17\"></polyline>\r\n                                    <polyline points=\"2 12 12 17 22 12\"></polyline>\r\n                                </svg>\r\n                                Listar falhas\r\n                            </a>\r\n                        </li>\r\n                        \r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-file-text\">\r\n                                    <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n                                    <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n                                    <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\r\n                                    <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\r\n                                    <polyline points=\"10 9 9 9 8 9\"></polyline>\r\n                                </svg>\r\n                                Year-end sale\r\n                            </a>\r\n                        </li> -->\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n            <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n                <div class=\"chartjs-size-monitor\"\r\n                    style=\"position: absolute; inset: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;\">\r\n                    <div class=\"chartjs-size-monitor-expand\"\r\n                        style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;\">\r\n                        <div style=\"position:absolute;width:1000000px;height:1000000px;left:0;top:0\"></div>\r\n                    </div>\r\n                    <div class=\"chartjs-size-monitor-shrink\"\r\n                        style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;\">\r\n                        <div style=\"position:absolute;width:200%;height:200%;left:0; top:0\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container mt-4\">\r\n                    <router-outlet></router-outlet>\r\n                </div>\r\n\r\n            </main>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Descrição sobre o SITE FMEA</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                Descrição sobre o SITE FMEADescrição sobre o SITE FMEADescrição sobre o SITE FMEADescrição sobre o SITE\r\n                FMEADescrição sobre o SITE FMEADescrição sobre o SITE FMEADescrição sobre o SITE FMEADescrição sobre o\r\n                SITE FMEA\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-inicio',\r\n  templateUrl: './inicio.component.html',\r\n  styleUrls: ['./inicio.component.css']\r\n})\r\nexport class InicioComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm \">\r\n                <h1>Software de Análise de Modos de Falha e seus Efeitos.</h1>\r\n                <p>\r\n                    A sigla FMEA significa “Failure Mode and Effect Analysis”. E o que é FMEA, na tradução para o\r\n                    português?\r\n                    Análise de Modos de Falha e seus Efeitos.\r\n                </p>\r\n                <p>\r\n                    Trata-se de uma metodologia que permite analisar possíveis falhas e o que sua ocorrência poderia\r\n                    causar\r\n                    dentro de uma indústria. Identifica, também, ações prioritárias de melhoria.\r\n                </p>\r\n                <p>\r\n                    O FMEA se popularizou como uma ferramenta útil para garantir segurança e eficiência em seus dois\r\n                    tipos\r\n                    possíveis:\r\n\r\n                    <br><br>\r\n\r\n                    <b>Produtos:</b> FMEA aplicado sobre as falhas de produto, que saem do padrão e das especificações\r\n                    definidas em\r\n                    um projeto;\r\n\r\n                    <br>\r\n\r\n                    <b>Processos:</b> FMEA aplicado sobre as falhas de processo, desde seu planejamento, e que\r\n                    geralmente\r\n                    são\r\n                    observadas após identificadas as não conformidades em produtos.\r\n                </p>\r\n            </div>\r\n            <div class=\"image col-sm\">\r\n                <img src=\"../../../assets/img/fmea1.jpg\" alt=\"Enfermeira\" class=\"img-fluid mr-5 rounded\">\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-5\">\r\n            <div class=\"image col-sm\">\r\n                <img src=\"../../../assets/img/fmea6.jpeg\" alt=\"Doutora\" class=\"img-fluid mr-5 rounded\">\r\n            </div>\r\n            <div class=\"title col-sm mt-5\">\r\n                <h1>Onde e como aplicar?</h1>\r\n                <p>\r\n                    O FMEA sempre é utilizado para melhorar processos ou produtos, seja com base em falhas\r\n                    pré-existentes ou\r\n                    para evitar a ocorrência de falhas potenciais.\r\n                </p>\r\n                <p>\r\n                    Em projetos de novos processos ou produtos, também pode ser interessante para definir\r\n                    antecipadamente a\r\n                    probabilidade de falhas e evitar diferentes tipos de problema.\r\n                </p>\r\n                <p>\r\n                    <b>Primeiramente, você precisará identificar os possíveis modos de falha.</b> Os dados devem ser os\r\n                    mais reais\r\n                    possíveis, vindos da engenharia ou do campo.\r\n\r\n                    Em seguida, <b>irá analisar os riscos de cada modo de falha.</b>\r\n                </p>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { UserService } from '../user/user.service';\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService{\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private userService: UserService\r\n      ) { }\r\n    \r\n      authenticate(usuario: string, senha: string){\r\n        return this.http\r\n          .post(API + 'logon', {\"usuario\":usuario, \"senha\":senha}, { observe: 'response'}) //coloque a rota de login da sua api\r\n          .pipe(tap(res => {\r\n            const authToken = res.headers.get('x-access-token');\r\n            this.userService.setToken(authToken);\r\n            console.log(`Usuário ${usuario} autenticado com o token ${authToken}`);\r\n          })\r\n        );\r\n      }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n// informe a key que será salva no localhost\r\nconst KEY = 'authTokenPlanoTerapeutico';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class TokenService{\r\n    hasToken(){\r\n        return !!this.getToken(); //!! é utilizado para converter valores em booleanos\r\n    }\r\n\r\n    setToken(token){\r\n        window.localStorage.setItem(KEY, token);\r\n    }\r\n\r\n    getToken(){\r\n        return window.localStorage.getItem(KEY);\r\n    }\r\n\r\n    removeToken(){\r\n        return window.localStorage.removeItem(KEY);\r\n    }\r\n}","import { Falha } from './../../falha/falha';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ConfirmationDialogService } from \"src/app/compartilhado/componentes/confirmation-dialog/confirmation-dialog.service\";\r\nimport { Login } from \"src/app/core/login/login/login\";\r\nimport { LoginService } from \"src/app/core/login/login/login.service\";\r\nimport { Plano } from \"../plano\";\r\nimport { PlanoService } from \"../plano.service\"\r\n\r\n@Component({\r\n    selector: 'app-lista-plano',\r\n    templateUrl: './lista-plano.component.html',\r\n    styleUrls: ['./lista-plano.component.css'],\r\n    providers: [ConfirmationDialogService]\r\n})\r\n\r\nexport class ListaPlanoComponent implements OnInit{\r\n    \r\n    Falhas: Falha[] = []\r\n    Plano: Plano[] = []\r\n    listaEventoForm: FormGroup\r\n    login: Login\r\n    displayedColumns: string[]\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private router: Router,\r\n        private PlanoService: PlanoService,\r\n        private loginService: LoginService\r\n\r\n    ) { }\r\n\r\n    ngOnInit(){\r\n        this.pesquisaTodos();\r\n        setInterval(() => this.pesquisaTodos(), 7000);\r\n\r\n        this.loginService.getUser().subscribe(result => {\r\n            this.login = result;\r\n        })\r\n\r\n        this.displayedColumns = ['descricao','ocorrencia', 'status', 'opcoes']\r\n\r\n        /* if(this.login.perfil == 'adm'){\r\n            this.displayedColumns = ['paciente','evento', 'opcoes']\r\n        }else{\r\n            this.displayedColumns = ['paciente', 'evento']            \r\n        } */\r\n        \r\n        this.listaEventoForm = this.formBuilder.group({\r\n            pesquisarTodos: ['']\r\n        })\r\n\r\n    }\r\n    \r\n    pesquisaTodos(){\r\n        this.PlanoService.getIdEquals().subscribe(result => {this.Falhas = result})\r\n    }\r\n\r\n    showPlanoInfo(id){\r\n        this.PlanoService.getPlanoById(id).subscribe(result => { this.Plano = result})\r\n    }\r\n\r\n    alterarStatus(id, status){\r\n        this.PlanoService.updateStatus(id, status).subscribe()      \r\n        window.alert('Status Alterado!')\r\n    }\r\n\r\n}","<div class=\"container \">\r\n    <form [formGroup]=\"listaEventoForm\" novalidate>\r\n      \r\n      \r\n      <div class=\"row mt-5\">\r\n        <div class=\"title col-sm mt-4\">\r\n          <h1>Lista de Planos:</h1>\r\n          <h4 style=\"font-weight: bold; color: red\">Atenção!</h4>\r\n          <p>Os plano são organizados por prioridade, partindo do mais urgente ao menos urgente.</p>\r\n        </div>\r\n      </div>\r\n      <table mat-table [dataSource]=\"Falhas\" class=\"mat-elevation-z8 text-center\">\r\n  \r\n        Coluna Nome\r\n        <ng-container matColumnDef=\"descricao\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Descrição </th>\r\n          <td mat-cell *matCellDef=\"let descricao\"> {{descricao.descricaoFalha}} </td>\r\n        </ng-container>\r\n  \r\n        Coluna Evento\r\n        <ng-container matColumnDef=\"ocorrencia\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Ocorrência </th>\r\n          <td mat-cell *matCellDef=\"let ocorrencia\"> {{ocorrencia.causaFalha}} </td>\r\n        </ng-container>\r\n  \r\n        Coluna Opções\r\n        <ng-container matColumnDef=\"status\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Status </th>\r\n          <td mat-cell *matCellDef=\"let status\">{{status.status_plano}}</td>\r\n        </ng-container>\r\n  \r\n        Coluna Opções\r\n        <ng-container matColumnDef=\"opcoes\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Opções </th>\r\n          <td mat-cell class=\"option\" *matCellDef=\"let opcoes\" title=\"Criar plano de ação\">\r\n            <img src=\"../../../assets/img/analytic.png\" (click)=\"showPlanoInfo(opcoes.fk_id_falha)\" data-toggle=\"modal\"\r\n              data-target=\"#exampleModal\">\r\n          </td>\r\n        </ng-container>\r\n  \r\n  \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </form>\r\n  </div>\r\n  \r\n  \r\n  \r\n  \r\n  <!-- Modal -->\r\n  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" data-backdrop=\"false\" role=\"dialog\"\r\n    aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <mat-accordion >\r\n            <mat-expansion-panel *ngFor=\"let plano of Plano\" [expanded]=\"plano\">\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                  <label>Descrição do Plano:</label>{{plano.plano_acao}}\r\n  \r\n                </mat-panel-title>\r\n                <mat-panel-title>\r\n                  <label>Status:</label>{{plano.status_plano}}\r\n                </mat-panel-title>\r\n              </mat-expansion-panel-header>\r\n              <div class=\"container\">\r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Nome do Responsável:</label>\r\n                    {{plano.responsavel}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Objetivo:</label>\r\n                    {{plano.objetivo}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">O quê? (What?)</label>\r\n                    {{plano.o_que}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Por que? (Why?)</label>\r\n                    {{plano.por_que}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Onde? (Where?)</label>\r\n                    {{plano.onde}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Quem? (Who?)</label>\r\n                    {{plano.quem}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Quando? (When?)</label>\r\n                    {{plano.quando | date: 'dd/MM/YYYY'}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Como? (How?)</label>\r\n                    {{plano.como}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Quanto? (How much?)</label>\r\n                    {{plano.quanto}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <!-- <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Status:</label>\r\n                    {{plano.status_plano}}\r\n                  </div>\r\n                </div> -->\r\n  \r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Prioridade:</label>\r\n                    {{plano.prioridade}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\" *ngIf=\"login.perfil === 'adm'\">\r\n                  <div class=\"col-md-3 offset-md-3\"></div>\r\n                  <div class=\"col-md-3 offset-md-3 dropup\">\r\n                    <button id=\"btnGroupDrop1\" type=\"button\" class=\"btn btn-primary dropdown-toggle\"\r\n                      data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                      Alterar Status\r\n                    </button>\r\n                    <div class=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\r\n                      <div class=\"form-check mx-2\" (click)=\"alterarStatus(plano.id, 'A fazer')\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\">\r\n                        <label style=\"font-weight: 200;\" class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                          A fazer\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"form-check mx-2\" (click)=\"alterarStatus(plano.id, 'Fazendo')\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\">\r\n                        <label style=\"font-weight: 200;\" class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                          Fazendo\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"form-check mx-2\" (click)=\"alterarStatus(plano.id, 'Feito')\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault3\">\r\n                        <label style=\"font-weight: 200;\" class=\"form-check-label\" for=\"flexRadioDefault3\">\r\n                          Feito\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n  \r\n              </div>\r\n            </mat-expansion-panel>\r\n            <br>\r\n          </mat-accordion>\r\n  \r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Fechar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { PlanoModule } from './plano/plano.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { CoreModule } from './core/core.module';\r\nimport { AppRoutingModule } from './app.routing.module';\r\nimport { HomeModule } from './home/home.module';\r\nimport { MaterialModule } from './compartilhado/componentes/material/material.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FalhaModule } from './falha/falha.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    HomeModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    CommonModule,\r\n    FalhaModule,\r\n    PlanoModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { MaterialModule } from '../compartilhado/componentes/material/material.module';\r\nimport { InicioComponent } from './inicio/inicio.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        HomeComponent,\r\n        HeaderComponent,\r\n        InicioComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        BrowserModule,\r\n        FormsModule,\r\n        MaterialModule,\r\n    ]\r\n})\r\nexport class HomeModule{\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CadFalhaComponent } from './cad-falha/cad-falha.component';\r\nimport { ListaFalhaComponent } from './lista-falha/lista-falha.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from '../app.routing.module';\r\nimport { MaterialModule } from '../compartilhado/componentes/material/material.module';\r\nimport { CoreModule } from '../core/core.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [CadFalhaComponent, ListaFalhaComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n  ]\r\n})\r\nexport class FalhaModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppMsgErroComponent } from './app-msg-erro.component';\r\n\r\n@NgModule({\r\n    declarations: [AppMsgErroComponent],\r\n    imports: [CommonModule],\r\n    exports: [AppMsgErroComponent]\r\n})\r\nexport class AppMsgErroModule{}","import { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Falha } from '../falha';\r\nimport { FalhaService } from '../falha.service';\r\n\r\n@Component({\r\n  selector: 'app-lista-falha',\r\n  templateUrl: './lista-falha.component.html',\r\n  styleUrls: ['./lista-falha.component.css']\r\n})\r\nexport class ListaFalhaComponent implements OnInit {\r\n\r\n  listaFalhaForm: FormGroup\r\n  Falhas: Falha[] = []\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private FalhaService: FalhaService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retornarFalhas()\r\n  }\r\n\r\n  retornarFalhas() {\r\n    this.FalhaService.retornarFalha().subscribe(res => { this.Falhas = res })\r\n  }\r\n\r\n  addPlanoAcao(id){\r\n    this.router.navigate(['/home/cadastrar/plano', id]);\r\n   //console.log(id)\r\n}\r\n\r\n}\r\n","<div class=\"container\">\r\n    <form #listaFalhaForm=\"ngForm\" novalidate>\r\n        <div class=\"title col-sm mt-4\">\r\n            <h1>Falhas contidas no sistema.</h1>\r\n            <p>Expanda os campos para mais informações.</p>\r\n        </div>\r\n        <mat-accordion>\r\n            <mat-expansion-panel *ngFor=\"let falha of Falhas\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        {{falha.causaFalha}}\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                        {{falha.dataFalha | date: 'dd/MM/yyyy'}} | Duração: {{falha.duracaoFalha}}\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col-4\">\r\n                        <label class=\"form-control-label font-weight-bold\">Setor:</label>\r\n                        {{falha.setorFalha}}\r\n                    </div>\r\n                    <div class=\"col-3\">\r\n                        <label class=\"form-control-label font-weight-bold\">Sala:</label>\r\n                        {{falha.salaFalha}}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col-3\">\r\n                        <label class=\"form-control-label font-weight-bold\">Hora de Início:</label>\r\n                        {{falha.horaInicio | date: 'HH:mm':'+0'}}\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <label class=\"form-control-label font-weight-bold\">Hora do Fim:</label>\r\n                        {{falha.horaFim | date: 'HH:mm':'+0'}}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col-5\">\r\n                        <label class=\"form-control-label font-weight-bold\">Causa da Falha:</label>\r\n                        {{falha.causaFalha}}\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <label class=\"form-control-label font-weight-bold\">Efeito da Falha:</label>\r\n                        {{falha.efeitoFalha}}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col\">\r\n                        <label class=\"form-control-label font-weight-bold\">Descrição da Falha (Caso houver):</label>\r\n                        {{falha.descricaoFalha}}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col\">\r\n                        <button type=\"button\" class=\"btn btn-warning\" (click)=\"addPlanoAcao(falha.id)\">Plano de ação</button>\r\n                    </div>\r\n                </div>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n    </form>\r\n</div>","import { EMPTY } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Falha } from './falha';\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FalhaService {\r\n\r\n  constructor(\r\n\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  novaFalha(falha: Falha) {\r\n    return this.http.post(`${API}falha`, falha).pipe(take(1))\r\n  }\r\n\r\n  retornarFalha(){\r\n    return this.http.get<Falha[]>(`${API}falha`)\r\n  }\r\n\r\n  getIdFalha(id){\r\n    if(!id) return EMPTY;\r\n    return this.http.get<Falha>(`${API}falha/${id}`).pipe(take(1));\r\n  }\r\n\r\n}\r\n","import { CadPlanoComponent } from './plano/cad-plano/cad-plano.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './core/login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginGuard } from './core/auth/login.guard';\r\nimport { AuthGuard } from './core/auth/auth.guard';\r\nimport { InicioComponent } from './home/inicio/inicio.component';\r\nimport { CadFalhaComponent } from './falha/cad-falha/cad-falha.component';\r\nimport { ListaFalhaComponent } from './falha/lista-falha/lista-falha.component';\r\nimport { ListaPlanoComponent } from './plano/lista-plano/lista-plano.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'login',\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        canActivate: [LoginGuard]\r\n    },\r\n    {\r\n        path: 'home',\r\n        component: HomeComponent,\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: InicioComponent\r\n            },\r\n            {\r\n                path: 'cadastrar/falha',\r\n                component: CadFalhaComponent\r\n            },\r\n            {\r\n                path: 'listar/falhas',\r\n                component: ListaFalhaComponent\r\n            },\r\n            {\r\n                path: 'cadastrar/plano',\r\n                component: CadPlanoComponent\r\n            },\r\n            {\r\n                path: 'cadastrar/plano/:id',\r\n                component: CadPlanoComponent\r\n            },\r\n            {\r\n                path: 'lista/plano',\r\n                component: ListaPlanoComponent\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [ \r\n        RouterModule.forRoot(routes, { useHash: true, relativeLinkResolution: 'legacy' } ) \r\n    ],\r\n    exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule{\r\n    \r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AppMsgErroModule } from '../compartilhado/componentes/app-msg-erro/app-msg-erro.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RequestInterceptor } from './auth/request.interceptor';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LoginComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AppMsgErroModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: RequestInterceptor,\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class CoreModule{\r\n\r\n}","\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-msg-erro',\r\n    templateUrl: './app-msg-erro.component.html'\r\n})\r\nexport class AppMsgErroComponent{\r\n\r\n    @Input() mensagem: string = ''\r\n    \r\n}","<div class=\"text-danger d-block mt-2\">\r\n    {{ mensagem }}\r\n </div>","import { Injectable } from '@angular/core';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog.component';\r\n\r\n@Injectable()\r\nexport class ConfirmationDialogService {\r\n\r\n  constructor(private modalService: NgbModal) { }\r\n\r\n  public confirm(\r\n    title: string,\r\n    message: string,\r\n    btnOkText: string = 'Confirmar',\r\n    btnCancelText: string = 'Cancelar',\r\n    dialogSize: 'sm'|'lg' = 'sm'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmationDialogComponent, { size: dialogSize });\r\n    modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor } from \"@angular/common/http\";\r\nimport { HttpRequest } from \"@angular/common/http\";\r\nimport { HttpHandler } from \"@angular/common/http\";\r\nimport { Observable, throwError as observableThrowError } from \"rxjs\";\r\nimport { HttpSentEvent } from \"@angular/common/http\";\r\nimport { HttpHeaderResponse } from \"@angular/common/http\";\r\nimport { HttpProgressEvent } from \"@angular/common/http\";\r\nimport { HttpResponse } from \"@angular/common/http\";\r\nimport { HttpUserEvent } from \"@angular/common/http\";\r\nimport { environment } from '../../../environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { TokenService } from \"../token/token.service\";\r\nimport { UserService } from '../user/user.service';\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable()\r\nexport class RequestInterceptor implements HttpInterceptor {\r\n    \r\n    constructor(\r\n        private tokenService: TokenService,\r\n        private userService: UserService,\r\n        private router: Router\r\n    ) {}\r\n\r\n    // intercepta cada requisição feita web para a api, verifica o token, clona e envia para a api\r\n    \r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpSentEvent \r\n        | HttpHeaderResponse | HttpProgressEvent | HttpResponse<any> | HttpUserEvent<any>> {\r\n            \r\n            if (req.url == `${API}login`) {\r\n                return next.handle(req);\r\n            }\r\n       \r\n            if(this.tokenService.hasToken()) {\r\n                const token = this.tokenService.getToken();\r\n                req = req.clone({\r\n                    setHeaders: {\r\n                        'x-access-token': token\r\n                    }\r\n                });\r\n            }\r\n            return next.handle(req)\r\n                .pipe(\r\n                    catchError(err => {\r\n                        if(err.status === 401){\r\n                            console.log('entrou');\r\n                            this.userService.logout();\r\n                            this.router.navigate(['login']);\r\n                            alert('Sua sessão expirou');\r\n                            return observableThrowError(err);\r\n                        }\r\n                    })\r\n                )\r\n            ;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport * as jtw_decode from 'jwt-decode';\r\n\r\nimport { User } from './user';\r\nimport { TokenService } from '../token/token.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UserService{\r\n\r\n    user: User;\r\n\r\n    // assim que inicia o serviço, verifica se existe o token e faz a decodificação\r\n    constructor(private tokenService: TokenService){\r\n        this.tokenService.hasToken() &&\r\n        this.decodeAndNotify();\r\n    }\r\n\r\n    setToken(token: string){\r\n        this.tokenService.setToken(token);\r\n        this.decodeAndNotify();\r\n    }\r\n\r\n    getUser(){\r\n        return this.user;\r\n    }\r\n\r\n    private decodeAndNotify(){\r\n        const token = this.tokenService.getToken();\r\n        this.user = jtw_decode(token) as User;\r\n    }\r\n\r\n    logout(){\r\n        this.tokenService.removeToken();\r\n        this.user = null;\r\n    }\r\n\r\n    isLogged(){\r\n        return this.tokenService.hasToken();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { UserService } from '../user/user.service';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class LoginGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router) {}\r\n\r\n    /* Guarda de rotas utilizada para retornar para a página inicial, caso o usuário já estiver logado */\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot, \r\n        state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n            \r\n            if(this.userService.isLogged()){\r\n                this.router.navigate(['home'])\r\n                return false;\r\n            }\r\n            return true;\r\n    }\r\n}","// IMPORT ALL MATERIAL COMPONENTS\r\n// #STEPS\r\n// 1- Import this file as module in app.module.ts ==> import { MaterialModule } from './xyz/abc';\r\n// 2- Initialize it in imports:[] array ==> imports:[MaterialModule]\r\n\r\nimport { NgModule } from '@angular/core';\r\n// *************** FORM CONTROLS ***************\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport{MatNativeDateModule} from '@angular/material/core'             //FROM ANGULAR CORE\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\n\r\n// *************** NAVIGATION ***************\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\n\r\n// *************** LAYOUT ***************\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n// *************** BUTTONS & INDICATORS ***************\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatRippleModule} from '@angular/material/core';\r\n\r\n// *************** POPUPS & MODALS ***************\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\n// *************** DATA TABLE ***************\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\n\r\n\r\nconst AllMaterialModules=[\r\n  MatAutocompleteModule,\r\n  MatCheckboxModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatMenuModule,\r\n  MatSidenavModule,\r\n  MatToolbarModule,\r\n  MatCardModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatListModule,\r\n  MatStepperModule,\r\n  MatTabsModule,\r\n  MatTreeModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatBadgeModule,\r\n  MatChipsModule,\r\n  MatIconModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  MatRippleModule,\r\n  MatBottomSheetModule,\r\n  MatDialogModule,\r\n  MatSnackBarModule,\r\n  MatTooltipModule,\r\n  MatPaginatorModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [AllMaterialModules],\r\n  exports: [AllMaterialModules],\r\n})\r\nexport class MaterialModule {}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}