{"version":3,"sources":["webpack:///src/app/core/login/login/login.component.ts","webpack:///src/app/core/login/login/login.service.ts","webpack:///src/app/core/login/login.component.ts","webpack:///src/app/core/login/login.component.html","webpack:///src/app/plano/plano.module.ts","webpack:///src/app/plano/plano.service.ts","webpack:///src/app/falha/cad-falha/cad-falha.component.ts","webpack:///src/app/falha/cad-falha/cad-falha.component.html","webpack:///src/app/compartilhado/componentes/confirmation-dialog/confirmation-dialog.component.ts","webpack:///src/app/compartilhado/componentes/confirmation-dialog/confirmation-dialog.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/core/auth/auth.guard.ts","webpack:///src/app/plano/cad-plano/cad-plano.component.ts","webpack:///src/app/plano/cad-plano/cad-plano.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/home/header/header.component.ts","webpack:///src/app/home/header/header.component.html","webpack:///src/app/home/inicio/inicio.component.ts","webpack:///src/app/home/inicio/inicio.component.html","webpack:///src/app/core/auth/auth.service.ts","webpack:///src/app/core/token/token.service.ts","webpack:///src/app/plano/lista-plano/lista-plano.component.ts","webpack:///src/app/plano/lista-plano/lista-plano.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.module.ts","webpack:///src/app/falha/falha.module.ts","webpack:///src/app/compartilhado/componentes/app-msg-erro/app-msg-erro.module.ts","webpack:///src/app/falha/lista-falha/lista-falha.component.ts","webpack:///src/app/falha/lista-falha/lista-falha.component.html","webpack:///src/app/falha/falha.service.ts","webpack:///src/app/app.routing.module.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/compartilhado/componentes/app-msg-erro/app-msg-erro.component.ts","webpack:///src/app/compartilhado/componentes/app-msg-erro/app-msg-erro.component.html","webpack:///src/app/compartilhado/componentes/confirmation-dialog/confirmation-dialog.service.ts","webpack:///src/app/core/auth/request.interceptor.ts","webpack:///src/app/core/user/user.service.ts","webpack:///src/app/core/auth/login.guard.ts","webpack:///src/app/compartilhado/componentes/material/material.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["LoginService","tokenService","loginSubject","hasToken","decodeAndNotify","token","setToken","asObservable","getToken","user","next","removeToken","providedIn","window","location","reload","LoginComponent","formBuilder","authService","router","loginError","loginForm","group","login","required","password","get","value","authenticate","subscribe","navigate","err","console","log","templateUrl","styleUrls","PlanoModule","declarations","imports","exports","API","apiUrl","PlanoService","http","plano","post","pipe","id","status","alterValue","put","CadFalhaComponent","confirmationDialogService","elementRef","FalhaService","setores","salas","causas","falhas","novaFalhaForm","dataFalha","setorFalha","salaFalha","minLength","descricaoFalha","horaInicio","horaFim","duracaoFalha","causaFalha","efeitoFalha","addDuracao","confirm","then","confirmed","novaFalha","getRawValue","success","alert","reset","error","h1","parseFloat","m1","h2","m2","t1","t2","t3","t4","Math","floor","t5","horaFinal","minFinal","res","patchValue","field","touchedVerify","valid","touched","addNovaFalha","formReset","selector","providers","ConfirmationDialogComponent","activeModal","close","dismiss","decline","accept","title","message","btnOkText","btnCancelText","HomeComponent","loginService","logout","environment","production","AuthGuard","userService","route","state","isLogged","queryParams","fromUrl","url","CadPlanoComponent","getUser","result","novoPlanoForm","fk_id_falha","plano_acao","responsavel","objetivo","criacao_data","o_que","por_que","onde","quem","quando","como","quanto","status_plano","gravidade","urgencia","tendencia","prioridade","getDataAtual","params","getIdFalha","falha","preencherEvento","data","Date","dia","getDate","toString","diaF","length","mes","getMonth","mesF","anoF","getFullYear","hora","getHours","minutos","getMinutes","dataNotificacao","Number","elementoIncidente","document","getElementById","novoPlano","newPlano","elementoFalha","elementoOcorrencia","addNovoPlano","AppComponent","HeaderComponent","InicioComponent","AuthService","usuario","senha","observe","authToken","headers","KEY","TokenService","localStorage","setItem","getItem","removeItem","ListaPlanoComponent","Falhas","Plano","pesquisaTodos","setInterval","displayedColumns","listaEventoForm","pesquisarTodos","getIdEquals","getPlanoById","updateStatus","AppModule","bootstrap","HomeModule","FalhaModule","AppMsgErroModule","ListaFalhaComponent","retornarFalhas","retornarFalha","routes","path","pathMatch","redirectTo","component","canActivate","children","AppRoutingModule","forRoot","useHash","relativeLinkResolution","CoreModule","provide","useClass","multi","AppMsgErroComponent","mensagem","ConfirmationDialogService","modalService","dialogSize","modalRef","open","size","componentInstance","RequestInterceptor","req","handle","clone","setHeaders","UserService","LoginGuard","AllMaterialModules","MaterialModule","bootstrapModule","webpackEmptyAsyncContext","Promise","resolve","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as jtw_decode from 'jwt-decode';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { TokenService } from 'src/app/core/token/token.service';\r\nimport { Login } from './login';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  loginSubject = new BehaviorSubject<Login>(null);\r\n\r\n  constructor(private tokenService: TokenService) {\r\n    this.tokenService.hasToken() && this.decodeAndNotify();\r\n  }\r\n\r\n  setToken(token: string) {\r\n    this.tokenService.setToken(token);\r\n    this.decodeAndNotify()\r\n  }\r\n\r\n  getUser() {\r\n    return this.loginSubject.asObservable()\r\n  }\r\n\r\n  private decodeAndNotify() {\r\n    const token = this.tokenService.getToken();\r\n    const user = jtw_decode(token) as Login\r\n    this.loginSubject.next(user);\r\n  }\r\n\r\n  logout() {\r\n    this.tokenService.removeToken();\r\n    this.loginSubject.next(null);\r\n  }\r\n\r\n  isLogged() {\r\n    return this.tokenService.hasToken();\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport * as jtw_decode from 'jwt-decode';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { TokenService } from 'src/app/core/token/token.service';\r\nimport { Login } from './login';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  loginSubject = new BehaviorSubject<Login>(null);\r\n\r\n  constructor(private tokenService: TokenService) {\r\n    this.tokenService.hasToken() && this.decodeAndNotify();\r\n  }\r\n\r\n  setToken(token: string) {\r\n    this.tokenService.setToken(token);\r\n    this.decodeAndNotify()\r\n  }\r\n\r\n  getUser() {\r\n    return this.loginSubject.asObservable()\r\n  }\r\n\r\n  private decodeAndNotify() {\r\n    const token = this.tokenService.getToken();\r\n    const user = jtw_decode(token) as Login\r\n    this.loginSubject.next(user);\r\n  }\r\n\r\n  logout() {\r\n    this.tokenService.removeToken();\r\n    this.loginSubject.next(null);       \r\n    window.location.reload();\r\n  }\r\n\r\n  isLogged() {\r\n    return this.tokenService.hasToken();\r\n  }\r\n}","import { Component, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent{\r\n    \r\n    loginForm: FormGroup; //diretiva para controle do formulário\r\n    @Input() loginError: boolean = false;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.loginForm = this.formBuilder.group({\r\n        login: ['', Validators.required],\r\n        password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    login(){\r\n        const login = this.loginForm.get('login').value;\r\n        const password = this.loginForm.get('password').value;\r\n\r\n        this.authService\r\n        .authenticate(login, password)\r\n        .subscribe(\r\n            () => this.router.navigate(['home']), //informe a rota que irá abrir após o login \r\n            err => {\r\n            console.log(err);\r\n            this.loginError = true;\r\n            }\r\n        );\r\n    }\r\n}","<div class=\"bodyGeral\">\r\n    <div class=\"container\">\r\n        <form #form=\"ngForm\" method=\"get\" action=\"javascript: void(0);\" id=\"login-form\" autocomplete=\"off\" role=\"main\"\r\n            [formGroup]=\"loginForm\" (submit)=\"login()\" class=\"login-form\">\r\n            <h1 class=\"a11y-hidden\">Login</h1>\r\n            <div>\r\n                <label class=\"label-email\">\r\n                    <input type=\"text\" class=\"text\" formControlName=\"login\" type=\"text\" placeholder=\"Usuário\"\r\n                        class=\"form-control\" tabindex=\"1\" required />\r\n                    <span class=\"required\">Usuário</span>\r\n                </label>\r\n                <app-msg-erro mensagem=\"O usuário é obrigatório!\" *ngIf=\"loginForm.get('login').errors?.required && \r\n        (form.submitted || loginForm.get('login').touched)\">\r\n                </app-msg-erro>\r\n            </div>\r\n            <input type=\"checkbox\" name=\"show-password\" class=\"show-password a11y-hidden\" id=\"show-password\"\r\n                tabindex=\"3\" />\r\n            <label class=\"label-show-password\" for=\"show-password\">\r\n                <span>Mostrar Senha</span>\r\n            </label>\r\n\r\n            <div>\r\n                <label class=\"label-password\">\r\n                    <input type=\"text\" formControlName=\"password\" class=\"text form-control\" name=\"password\"\r\n                        placeholder=\"Senha\" tabindex=\"2\" required />\r\n                    <span class=\"required\">Senha</span>\r\n                </label>\r\n\r\n                <app-msg-erro mensagem=\"A senha é obrigatória!\" *ngIf=\"loginForm.get('password').errors?.required && \r\n            (form.submitted || loginForm.get('password').touched)\">\r\n                </app-msg-erro>\r\n            </div>\r\n            <input type=\"submit\" value=\"Entrar\" />\r\n            <!-- <div class=\"email\">\r\n            <a href=\"#\">Forgot password?</a>\r\n        </div> -->\r\n            <figure aria-hidden=\"true\">\r\n                <div class=\"person-body\"></div>\r\n                <div class=\"neck skin\"></div>\r\n                <div class=\"head skin\">\r\n                    <div class=\"eyes\"></div>\r\n                    <div class=\"mouth\"></div>\r\n                </div>\r\n                <div class=\"hair\"></div>\r\n                <div class=\"ears\"></div>\r\n                <div class=\"shirt-1\"></div>\r\n                <div class=\"shirt-2\"></div>\r\n            </figure>\r\n        </form>\r\n    </div>\r\n</div>","import { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\nimport { AppRoutingModule } from \"../app.routing.module\";\r\nimport { MaterialModule } from \"../compartilhado/componentes/material/material.module\";\r\nimport { CoreModule } from \"../core/core.module\";\r\n\r\nimport { CadPlanoComponent } from \"./cad-plano/cad-plano.component\";\r\nimport { ListaPlanoComponent } from \"./lista-plano/lista-plano.component\";\r\n\r\n@NgModule({\r\n    declarations:[\r\n        CadPlanoComponent,\r\n        ListaPlanoComponent\r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        BrowserModule,\r\n        CoreModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        FormsModule,\r\n        MaterialModule,\r\n    ],\r\n    exports:[\r\n\r\n    ]\r\n\r\n})\r\n\r\n\r\nexport class PlanoModule{\r\n\r\n}","import { Falha } from './../falha/falha';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { EMPTY } from \"rxjs\";\r\nimport { Observable } from \"rxjs\";\r\nimport { take } from \"rxjs/operators\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Plano } from \"./plano\";\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class PlanoService{\r\n    constructor(\r\n        private http: HttpClient\r\n    ){}\r\n\r\n\r\n    newPlano(plano: Plano){\r\n        return this.http.post(`${API}plano`, plano).pipe(take(1));\r\n    }\r\n\r\n    getAllPlano(): Observable<Plano[]>{\r\n        return this.http.get<Plano[]>(`${API}plano`)        \r\n    }\r\n\r\n    getIdEquals(): Observable<Falha[]>{\r\n        return this.http.get<Falha[]>(`${API}plano/falha`)        \r\n    }\r\n\r\n    getPlanoById(id){\r\n        if(!id) return EMPTY;\r\n        return this.http.get<Plano[]>(`${API}plano/find/${id}`).pipe(take(1));\r\n    }\r\n\r\n    updateStatus(id, status){\r\n        const alterValue = [id, status]\r\n        return this.http.put(`${API}plano/find/${alterValue[0]}`, alterValue).pipe(take(1));\r\n    }\r\n}","import { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationDialogService } from 'src/app/compartilhado/componentes/confirmation-dialog/confirmation-dialog.service';\r\nimport { Falha } from '../falha';\r\nimport { FalhaService } from '../falha.service';\r\n\r\n@Component({\r\n  selector: 'app-cad-falha',\r\n  templateUrl: './cad-falha.component.html',\r\n  styleUrls: ['./cad-falha.component.css'],\r\n  providers: [ConfirmationDialogService]\r\n})\r\nexport class CadFalhaComponent implements OnInit {\r\n\r\n\r\n  novaFalhaForm: FormGroup;\r\n  setores = ['Ortopedia', 'Plástica', 'Otorrino', 'Cardíaco', 'GO', 'Neuro', 'Geral']\r\n  salas = ['1', '2', '3', '4', '5', '6', '7', '8', 'GO 1', 'GO 2', 'Emergência']\r\n  causas = ['Atraso de Colaborador', 'Atraso de Paciente', 'Atraso de Documentação', 'Falta de Material', 'Falta de Assinatura', 'Falta de Leito', 'Risco para Paciente', 'Negligência do Processo', 'Tasy']\r\n  falhas = ['Atraso no Processo', 'Cancelamento do Processo', 'Transtorno ao Paciente', 'Risco para Paciente']\r\n\r\n  constructor(\r\n    public confirmationDialogService: ConfirmationDialogService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private elementRef: ElementRef,\r\n    private FalhaService: FalhaService\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.novaFalhaForm = this.formBuilder.group({\r\n      dataFalha: [null, [Validators.required]],\r\n      setorFalha: ['Centro Cirúrgico'],\r\n      salaFalha: [null, [Validators.required, Validators.minLength(1)]],\r\n      descricaoFalha: [null],\r\n      horaInicio: [null, [Validators.required, Validators.minLength(1)]],\r\n      horaFim: [null, [Validators.required, Validators.minLength(1)]],\r\n      duracaoFalha:[null],\r\n      causaFalha: [null, [Validators.required, Validators.minLength(1)]],\r\n      efeitoFalha: [null, [Validators.required, Validators.minLength(1)]],\r\n    })\r\n  }\r\n\r\n\r\n  addNovaFalha() {\r\n\r\n    this.addDuracao()\r\n    console.log(this.novaFalhaForm.value);\r\n    \r\n\r\n    this.confirmationDialogService.confirm('Por favor, confirme...', `Você realmente deseja adicionar a falha citada? Após adicionada, não será possível sua exclusão.`)\r\n      .then((confirmed) => {\r\n        if (confirmed == true) {\r\n          const novaFalha = this.novaFalhaForm.getRawValue() as Falha;\r\n          this.FalhaService.novaFalha(novaFalha).subscribe(\r\n            success => {\r\n              alert('Cadastro efetuado com sucesso!')\r\n              this.novaFalhaForm.reset();\r\n            },\r\n            error => {\r\n              alert('Não foi possível cadastrar a falha.')\r\n            }\r\n          )\r\n        }\r\n        else if (confirmed == false) {\r\n\r\n        }\r\n      }\r\n      )\r\n      .catch(() => console.log('Request denied.'));\r\n  }\r\n\r\n  addDuracao() {\r\n    let h1 = parseFloat(this.novaFalhaForm.value.horaInicio[0] + this.novaFalhaForm.value.horaInicio[1]);\r\n    let m1 = parseFloat(this.novaFalhaForm.value.horaInicio[3] + this.novaFalhaForm.value.horaInicio[4]);\r\n    let h2 = parseFloat(this.novaFalhaForm.value.horaFim[0] + this.novaFalhaForm.value.horaFim[1]);\r\n    let m2 = parseFloat(this.novaFalhaForm.value.horaFim[3] + this.novaFalhaForm.value.horaFim[4]);\r\n    let t1 = (h1 * 60) + m1;\r\n    let t2 = (h2 * 60) + m2;\r\n    if (t1 > t2) {\r\n      h2 = h2 + 24;\r\n      t2 = (h2 * 60) + m2;\r\n    }\r\n    let t3 = t2 - t1;\r\n    let t4 = Math.floor(t3 / 60);\r\n    let t5 = t3 - (t4 * 60);\r\n\r\n    let horaFinal\r\n    let minFinal\r\n\r\n    if(t4 < 10){\r\n      horaFinal = \"\" + 0 + t4\r\n    }else{\r\n      horaFinal = t4\r\n    }\r\n\r\n    if(t5 < 10){\r\n      minFinal = \"\" + 0 + t5\r\n    }else{\r\n      minFinal = t5\r\n    }\r\n\r\n    let res = horaFinal + \"h\" + \":\" + minFinal + \"min\"\r\n\r\n    this.novaFalhaForm.patchValue({duracaoFalha: res})\r\n\r\n  }\r\n\r\n  checkError(field) {\r\n    return {\r\n      'has-danger': this.touchedVerify(field)\r\n    };\r\n  }\r\n\r\n  formReset() {\r\n    this.novaFalhaForm.reset();\r\n  }\r\n\r\n  touchedVerify(field) {\r\n    return !this.novaFalhaForm.get(field).valid && this.novaFalhaForm.get(field).touched;\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <form [formGroup]=\"novaFalhaForm\" (ngSubmit)=\"addNovaFalha()\" novalidate>\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm mt-4\">\r\n                <h1>Info.</h1>\r\n                <p>Os campos abaixos devem serem preenchidos com as informações da falha.</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('dataFalha')\">\r\n                <label class=\"form-control-label\" for=\"dataFalha\">Data da Falha <em>*</em></label>\r\n                <input type=\"date\" class=\"form-control\" formControlName=\"dataFalha\" id=\"dataFalha\">\r\n                <div *ngIf=\"touchedVerify('dataFalha')\" class=\"form-control-feedback\">Data da falha\r\n                    inválida.\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('setorFalha')\">\r\n                <label class=\"form-control-label\" for=\"setorFalha\">Setor <em>*</em></label>\r\n                <select id=\"setorFalha\" class=\"form-control\" formControlName=\"setorFalha\" disabled>\r\n                    <option selected>Centro Cirúrgico</option>\r\n                    <option *ngFor=\"let setor of setores\">{{setor}}</option>\r\n                </select>\r\n                <div *ngIf=\"touchedVerify('setorFalha')\" class=\"form-control-feedback\">Por favor, insira um setor\r\n                    válido.\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('salaFalha')\">\r\n                <label class=\"form-control-label\" for=\"salaFalha\">Sala <em>*</em></label>\r\n                <select id=\"salaFalha\" class=\"form-control\" formControlName=\"salaFalha\">\r\n                    <option></option>\r\n                    <option *ngFor=\"let sala of salas\">{{sala}}</option>\r\n                </select>\r\n                <div *ngIf=\"touchedVerify('salaFalha')\" class=\"form-control-feedback\">Por favor, insira uma sala válida.\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"form-group col-md-8\">\r\n                <label class=\"form-control-label\" for=\"descricaoFalha\">Especificação da Falha</label>\r\n                <p>Especifique o que gerou a falha. Ex.: \"A falta de um bisturi.\", o \"bisturi\" é a especificação.</p>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"descricaoFalha\" id=\"descricaoFalha\">\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"form-group col-md-2\">\r\n                <label class=\"form-control-label\" for=\"horaInicio\">Hora de Início <em>*</em></label>\r\n                <input type=\"time\" class=\"form-control\" formControlName=\"horaInicio\" id=\"horaInicio\">\r\n                <div *ngIf=\"touchedVerify('horaInicio')\" class=\"form-control-feedback\">Campo Obrigatório\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group col-md-2\">\r\n                <label class=\"form-control-label\" for=\"horaFim\">Hora do Fim <em>*</em></label>\r\n                <input type=\"time\" class=\"form-control\" formControlName=\"horaFim\" id=\"horaFim\" [attr.disabled]=\"(!novaFalhaForm.value.horaInicio) || null\">\r\n                <div *ngIf=\"touchedVerify('horaFim')\" class=\"form-control-feedback\">Campo Obrigatório\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-4\">\r\n            <div class=\"form-group col-md-4\">\r\n                <label class=\"form-control-label\" for=\"causaFalha\">Causa de Atraso <em>*</em></label>\r\n                <select id=\"causaFalha\" class=\"form-control\" formControlName=\"causaFalha\">\r\n                    <option></option>\r\n                    <option *ngFor=\"let causa of causas\">{{causa}}</option>\r\n                </select>\r\n                <div *ngIf=\"touchedVerify('causaFalha')\" class=\"form-control-feedback\">Campo Obrigatório\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group col-md-4\">\r\n                <label class=\"form-control-label\" for=\"efeitoFalha\">Efeito Ocasionado <em>*</em></label>\r\n                <select id=\"efeitoFalha\" class=\"form-control\" formControlName=\"efeitoFalha\">\r\n                    <option></option>\r\n                    <option *ngFor=\"let falha of falhas\">{{falha}}</option>\r\n                </select>\r\n                <div *ngIf=\"touchedVerify('efeitoFalha')\" class=\"form-control-feedback\">Campo Obrigatório\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row justify-content-end\">\r\n            <div class=\"align-self-end mb-4\">\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"formReset()\">Limpar</button>\r\n                <button type=\"submit\" class=\"btn btn-success mx-3\" [attr.disabled]=\"novaFalhaForm.invalid || null\">Enviar</button>\r\n                <!-- <button type=\"submit\" class=\"btn btn-success mx-3\">Enviar</button> -->\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-dialog',\r\n  templateUrl: './confirmation-dialog.component.html',\r\n})\r\nexport class ConfirmationDialogComponent implements OnInit {\r\n\r\n  @Input() title: string;\r\n  @Input() message: string;\r\n  @Input() btnOkText: string;\r\n  @Input() btnCancelText: string;\r\n\r\n  constructor(private activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public decline() {\r\n    this.activeModal.close(false);\r\n  }\r\n\r\n  public accept() {\r\n    this.activeModal.close(true);\r\n  }\r\n\r\n  public dismiss() {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">{{ title }}</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"dismiss()\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  {{ message }}\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{ btnCancelText }}</button>\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"accept()\">{{ btnOkText }}</button>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Login } from '../core/login/login/login';\r\nimport { LoginService } from '../core/login/login/login.component';\r\n\r\n@Component({\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n    login: Login;\r\n\r\n    constructor(\r\n        private loginService: LoginService,\r\n        private router: Router\r\n    ) {\r\n\r\n    }\r\n\r\n\r\n    logout() {\r\n        this.loginService.logout();\r\n        this.router.navigate(['login']);\r\n    }\r\n}","<body>\r\n    <nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a class=\"navbar-brand text-center scol-sm-3 col-md-2 mr-0\" href=\"#\">HCSL - FMEA</a>\r\n        <!-- <input class=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"> -->\r\n        <ul class=\"navbar-nav px-4\">\r\n            <li class=\"nav-item text-nowrap\">\r\n                <a class=\"nav-link\" href=\"#\" (click)=\"logout()\">Sair</a>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <nav class=\"col-md-2 d-none d-md-block bg-light sidebar\">\r\n                <div class=\"sidebar-sticky\">\r\n                    <ul class=\"nav flex-column\">\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link active\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-home\">\r\n                                    <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\r\n                                    <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\r\n                                </svg>\r\n                                Home <span class=\"sr-only\">(current)</span>\r\n                            </a>\r\n                        </li>\r\n\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-shopping-cart\">\r\n                                    <circle cx=\"9\" cy=\"21\" r=\"1\"></circle>\r\n                                    <circle cx=\"20\" cy=\"21\" r=\"1\"></circle>\r\n                                    <path d=\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\r\n                                </svg>\r\n                                Shop\r\n                            </a>\r\n                        </li> -->\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-users\">\r\n                                    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\r\n                                    <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\r\n                                    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\r\n                                    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\r\n                                </svg>\r\n                                Customers\r\n                            </a>\r\n                        </li> -->\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-bar-chart-2\">\r\n                                    <line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line>\r\n                                    <line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line>\r\n                                    <line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line>\r\n                                </svg>\r\n                                Reports\r\n                            </a>\r\n                        </li> -->\r\n                    </ul>\r\n\r\n                    <h6\r\n                        class=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\r\n                        <span>Análise de Efeitos de Falha</span>\r\n                        <a class=\"d-flex align-items-center text-muted\" href=\"#\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n                                stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                class=\"feather feather-plus-circle\">\r\n                                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                                <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line>\r\n                                <line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>\r\n                            </svg>\r\n                        </a>\r\n                    </h6>\r\n                    <ul class=\"nav flex-column mb-2\">\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" [routerLink]=\"'./cadastrar/falha'\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-file\">\r\n                                    <path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path>\r\n                                    <polyline points=\"13 2 13 9 20 9\"></polyline>\r\n                                </svg>\r\n                                Cadastrar falha\r\n                            </a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" [routerLink]=\"'./listar/falhas'\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-layers\">\r\n                                    <polygon points=\"12 2 2 7 12 12 22 7 12 2\"></polygon>\r\n                                    <polyline points=\"2 17 12 22 22 17\"></polyline>\r\n                                    <polyline points=\"2 12 12 17 22 12\"></polyline>\r\n                                </svg>\r\n                                Falhas\r\n                            </a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" [routerLink]=\"'./lista/plano'\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                                    class=\"bi bi-list\" viewBox=\"0 0 16 16\">\r\n                                    <path fill-rule=\"evenodd\"\r\n                                        d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\" />\r\n                                    </svg>\r\n                                Listar planos\r\n                            </a>\r\n                        </li>\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-file-text\">\r\n                                    <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n                                    <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n                                    <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\r\n                                    <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\r\n                                    <polyline points=\"10 9 9 9 8 9\"></polyline>\r\n                                </svg>\r\n                                Year-end sale\r\n                            </a>\r\n                        </li> -->\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n            <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n                <div class=\"chartjs-size-monitor\"\r\n                    style=\"position: absolute; inset: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;\">\r\n                    <div class=\"chartjs-size-monitor-expand\"\r\n                        style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;\">\r\n                        <div style=\"position:absolute;width:1000000px;height:1000000px;left:0;top:0\"></div>\r\n                    </div>\r\n                    <div class=\"chartjs-size-monitor-shrink\"\r\n                        style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;\">\r\n                        <div style=\"position:absolute;width:200%;height:200%;left:0; top:0\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container mt-4\">\r\n                    <router-outlet></router-outlet>\r\n                </div>\r\n\r\n            </main>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Software FMEA</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                O Software FMEA é um software corporativo que ajuda o hospital no gerenciamento da Análise dos Modos\r\n                de Falha e seus Efeitos. Por meio de uma abordagem proativa, o Software observa os defeitos\r\n                ocorridos, permitindo que o hospital garanta que a falha não corra novamente em suas atividades.\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:3000/api/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserService } from '../user/user.service';\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router) {}\r\n\r\n    /* Guarda de rotas para ser utilizada nas rotas \r\n       que não devem ser acessadas se o usuário não estiver logado*/\r\n       \r\n    canActivate(\r\n        route: ActivatedRouteSnapshot, \r\n        state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n            if(!this.userService.isLogged()){\r\n                this.router.navigate(\r\n                    ['login'],\r\n                    {\r\n                        queryParams: {\r\n                            fromUrl: state.url\r\n                        }\r\n                    }\r\n                );\r\n                return false;\r\n            }\r\n            return true;\r\n    }\r\n}","import { FalhaService } from './../../falha/falha.service';\r\nimport { Falha } from './../../falha/falha';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { map, switchMap } from \"rxjs/operators\";\r\nimport { ConfirmationDialogService } from \"src/app/compartilhado/componentes/confirmation-dialog/confirmation-dialog.service\";\r\nimport { Login } from \"src/app/core/login/login/login\";\r\nimport { LoginService } from \"src/app/core/login/login/login.service\";\r\nimport { Plano } from \"../plano\";\r\nimport { PlanoService } from \"../plano.service\";\r\n\r\n@Component({\r\n    selector: 'app-cad-plano',\r\n    templateUrl: './cad-plano.component.html',\r\n    styleUrls: ['./cad-plano.component.css'],\r\n    providers: [ConfirmationDialogService]\r\n})\r\n\r\nexport class CadPlanoComponent implements OnInit {\r\n\r\n    novoPlanoForm: FormGroup\r\n    login: Login\r\n\r\n    constructor(\r\n        public confirmationDialogService: ConfirmationDialogService,\r\n        private formBuilder: FormBuilder,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private loginService: LoginService,\r\n        private PlanoService: PlanoService,\r\n        private FalhaService: FalhaService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.loginService.getUser().subscribe(result => {\r\n            this.login = result;\r\n        })\r\n\r\n        this.novoPlanoForm = this.formBuilder.group({\r\n            fk_id_falha: [null, [Validators.required, Validators.minLength(1)]],\r\n            plano_acao: [null, [Validators.required, Validators.minLength(1)]],\r\n            responsavel: [null, [Validators.required, Validators.minLength(1)]],\r\n            objetivo: [null, [Validators.required, Validators.minLength(1)]],\r\n            criacao_data: [null, [Validators.required, Validators.minLength(1)]],\r\n            o_que: [null, [Validators.required, Validators.minLength(1)]],\r\n            por_que: [null, [Validators.required, Validators.minLength(1)]],\r\n            onde: [null, [Validators.required, Validators.minLength(1)]],\r\n            quem: [null, [Validators.required, Validators.minLength(1)]],\r\n            quando: [null, [Validators.required, Validators.minLength(1)]],\r\n            como: [null, [Validators.required, Validators.minLength(1)]],\r\n            quanto: [null, [Validators.required, Validators.minLength(1)]],\r\n            status_plano: ['A fazer', [Validators.required, Validators.minLength(1)]],\r\n            gravidade: [null, [Validators.required, Validators.minLength(1)]],\r\n            urgencia: [null, [Validators.required, Validators.minLength(1)]],\r\n            tendencia: [null, [Validators.required, Validators.minLength(1)]],\r\n            prioridade: [null, [Validators.required, Validators.minLength(1)]],\r\n        })\r\n\r\n        this.getDataAtual()\r\n\r\n        this.route.params\r\n            .pipe(\r\n                map((params: any) => params['id']),\r\n                switchMap(id => this.FalhaService.getIdFalha(id))\r\n\r\n            )\r\n            .subscribe(falha => this.preencherEvento(falha)\r\n            );\r\n\r\n    }\r\n\r\n    getDataAtual() {\r\n        let data = new Date(),\r\n            dia = data.getDate().toString(),\r\n            diaF = (dia.length == 1) ? '0' + dia : dia,\r\n            mes = (data.getMonth() + 1).toString(), //+1 pois no getMonth Janeiro começa com zero.\r\n            mesF = (mes.length == 1) ? '0' + mes : mes,\r\n            anoF = data.getFullYear(),\r\n            hora = data.getHours(),\r\n            minutos = data.getMinutes()\r\n\r\n        let dataNotificacao = anoF + \"-\" + mesF + \"-\" + diaF + \" \" + hora + \":\" + minutos\r\n\r\n        this.novoPlanoForm.patchValue({ criacao_data: dataNotificacao })\r\n    }\r\n\r\n    addNovoPlano() {\r\n\r\n        this.novoPlanoForm.patchValue({ prioridade: Number(this.novoPlanoForm.value.gravidade) + Number(this.novoPlanoForm.value.tendencia) + Number(this.novoPlanoForm.value.urgencia) })\r\n        let elementoIncidente = <HTMLInputElement>document.getElementById('falha_ocorrida')\r\n\r\n        console.log(this.novoPlanoForm.value)\r\n\r\n        this.confirmationDialogService.confirm('Por favor, confirme...', `O Plano de Ação \"${this.novoPlanoForm.value.plano_acao}\" será adicionado a falha \"${elementoIncidente.value}\". Deseja prosseguir?`)\r\n            .then((confirmed) => {\r\n                if (confirmed == true) {\r\n                    const novoPlano = this.novoPlanoForm.getRawValue() as Plano;\r\n                    this.PlanoService.newPlano(novoPlano).subscribe(\r\n                        success => {\r\n                            alert('Plano de Ação cadastro com sucesso!')\r\n                            this.formReset()\r\n                            /* this.newFormPlano(); */\r\n                        },\r\n                        error => {\r\n                            alert('Não foi possível cadastrar o plano de ação. Tente novamente.')\r\n                        }\r\n                    )\r\n                }\r\n                else if (confirmed == false) {\r\n\r\n                }\r\n            }\r\n            )\r\n            .catch(() => console.log('Request denied.'));\r\n\r\n    }\r\n\r\n    preencherEvento(falha: Falha) {\r\n        this.novoPlanoForm.patchValue({\r\n            fk_id_falha: falha[0].id\r\n        })\r\n\r\n        let elementoFalha = <HTMLInputElement>document.getElementById('descricao_falha')\r\n        elementoFalha.value = falha[0].descricaoFalha\r\n        let elementoOcorrencia = <HTMLInputElement>document.getElementById('falha_ocorrida')\r\n        elementoOcorrencia.value = falha[0].causaFalha\r\n\r\n    }\r\n\r\n    formReset() {\r\n        this.novoPlanoForm.reset();\r\n        this.router.navigate(['/home/cadastrar/plano']);\r\n    }\r\n\r\n    checkError(field) {\r\n        return {\r\n            'has-danger': this.touchedVerify(field)\r\n        };\r\n    }\r\n\r\n    touchedVerify(field) {\r\n        return !this.novoPlanoForm.get(field).valid && this.novoPlanoForm.get(field).touched;\r\n    }\r\n\r\n}","<!-- <div class=\"container\" *ngIf=\"login.perfil === 'user'\">\r\n    <app-denied-page></app-denied-page>\r\n</div> -->\r\n<div class=\"container mt-5\">\r\n\r\n\r\n    <form [formGroup]=\"novoPlanoForm\" (ngSubmit)=\"addNovoPlano()\" novalidate>\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm mt-4\">\r\n                <h1>Informações sobre o Incidente</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-md-5\">\r\n                <label class=\"form-control-label\" for=\"descricao_falha\">Descrição<em>*</em></label>\r\n                <input type=\"text\" class=\"form-control\" id=\"descricao_falha\" disabled>\r\n            </div>\r\n            <div class=\"form-group col-md-6\">\r\n                <label class=\"form-control-label\" for=\"falha_ocorrida\">Falha ocorrida<em>*</em></label>\r\n                <input type=\"text\" class=\"form-control\" id=\"falha_ocorrida\" maxlength=\"50\" disabled>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm mt-4\">\r\n                <h1>Cadastro de Plano de Ação</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-md-6\" [ngClass]=\"checkError('plano_acao')\">\r\n                <label class=\"form-control-label\" for=\"plano_acao\">Plano de Ação <em>*</em></label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"plano_acao\" id=\"plano_acao\" maxlength=\"50\">\r\n                <div *ngIf=\"touchedVerify('plano_acao')\" class=\"form-control-feedback\">Por favor, insira um Plano de\r\n                    Ação válido.\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-4\" [ngClass]=\"checkError('responsavel')\">\r\n                <label class=\"form-control-label\" for=\"responsavel\">Responsável<em>*</em></label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"responsavel\" id=\"responsavel\" maxlength=\"50\">\r\n                <div *ngIf=\"touchedVerify('responsavel')\" class=\"form-control-feedback\">Responsável inválido.\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n\r\n            <div class=\"form-group col-md-8\" [ngClass]=\"checkError('objetivo')\">\r\n                <label class=\"form-control-label\" for=\"objetivo\">Objetivo<em>*</em></label>\r\n                <input type=\"text\" class=\"form-control\" formControlName=\"objetivo\" id=\"objetivo\" maxlength=\"50\">\r\n                <div *ngIf=\"touchedVerify('objetivo')\" class=\"form-control-feedback\">Objetivo inválido.\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"form-group col-md-4\" [ngClass]=\"checkError('setor')\">\r\n                <label class=\"form-control-label\" for=\"setor\">Setor <em>*</em></label>\r\n                <select id=\"setor\" class=\"form-control\" (click)=\"timeCounter()\" [(ngModel)]=\"selectedSetor\"\r\n                    formControlName=\"setor\">\r\n                    <option></option>\r\n                    <option *ngFor=\"let setor of setores\">{{setor.setor}}</option>\r\n                </select>\r\n                <div *ngIf=\"touchedVerify('setor')\" class=\"form-control-feedback\">Por favor, insira um setor válido.\r\n                </div>\r\n            </div> -->\r\n        </div>\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm mt-4\">\r\n                <h1>5W</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-md-2\" [ngClass]=\"checkError('o_que')\">\r\n                <label class=\"form-control-label\" for=\"o_que\">O quê? (What?)<em>*</em></label>\r\n                <textarea class=\"form-control\" rows=\"1\" formControlName=\"o_que\" id=\"o_que\"></textarea>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-md-2\" [ngClass]=\"checkError('o_que')\">\r\n                <label class=\"form-control-label\" for=\"por_que\">Por que? (Why?)<em>*</em></label>\r\n                <textarea class=\"form-control\" rows=\"1\" formControlName=\"por_que\" id=\"por_que\"></textarea>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-md-2\" [ngClass]=\"checkError('onde')\">\r\n                <label class=\"form-control-label\" for=\"onde\">Onde? (Where?)<em>*</em></label>\r\n                <textarea class=\"form-control\" rows=\"1\" formControlName=\"onde\" id=\"onde\"></textarea>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-md-2\" [ngClass]=\"checkError('quem')\">\r\n                <label class=\"form-control-label\" for=\"quem\">Quem? (Who?)<em>*</em></label>\r\n                <textarea class=\"form-control\" rows=\"1\" formControlName=\"quem\" id=\"quem\"></textarea>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-md-2\" [ngClass]=\"checkError('quando')\">\r\n                <label class=\"form-control-label\" for=\"quando\">Quando? (When?)<em>*</em></label>\r\n                <input type=\"Date\" class=\"form-control\" formControlName=\"quando\" id=\"quando\">\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm mt-4\">\r\n                <h1>2H</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-md-2\" [ngClass]=\"checkError('como')\">\r\n                <label class=\"form-control-label\" for=\"como\">Como? (How?)<em>*</em></label>\r\n                <textarea class=\"form-control\" rows=\"1\" formControlName=\"como\" id=\"como\"></textarea>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('quanto')\">\r\n                <label class=\"form-control-label\" for=\"quanto\">Quanto custa? (How much?)<em>*</em></label>\r\n                <textarea class=\"form-control\" rows=\"1\" formControlName=\"quanto\" id=\"quanto\"></textarea>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm mt-4\">\r\n                <h1>Matriz GUT</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('gravidade')\">\r\n                <label class=\"form-control-label\" for=\"gravidade\">Gravidade<em>*</em></label>\r\n                <select id=\"setor\" class=\"form-control\" formControlName=\"gravidade\">\r\n                    <option value=9>Muito Impactante</option>\r\n                    <option value=3>Impactante</option>\r\n                    <option value=1>Pouco Impactante</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('urgencia')\">\r\n                <label class=\"form-control-label\" for=\"urgencia\">Urgência<em>*</em></label>\r\n                <select id=\"setor\" class=\"form-control\" formControlName=\"urgencia\">\r\n                    <option value=9>Muito Viável</option>\r\n                    <option value=3>Viável</option>\r\n                    <option value=1>Pouco Viável</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-3\" [ngClass]=\"checkError('tendencia')\">\r\n                <label class=\"form-control-label\" for=\"tendencia\">Tendência<em>*</em></label>\r\n                <select id=\"setor\" class=\"form-control\" formControlName=\"tendencia\">\r\n                    <option value=9>Compensa Muito</option>\r\n                    <option value=3>Compensa</option>\r\n                    <option value=1>Não Compensa</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row justify-content-end\">\r\n            <div class=\"align-self-end\">\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"formReset()\">Limpar</button>\r\n                <!-- <button type=\"submit\" class=\"btn btn-success mx-3\" [attr.disabled]=\"!novoEventoForm.valid\">Enviar</button> -->\r\n                <button type=\"submit\" class=\"btn btn-success mx-3\">Enviar</button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'plano-terapeutico';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<body>\r\n    <nav class=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a class=\"navbar-brand text-center scol-sm-3 col-md-2 mr-0\" href=\"#\">HCSL - FMEA</a>\r\n        <!-- <input class=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"> -->\r\n        <ul class=\"navbar-nav px-4\">\r\n            <li class=\"nav-item text-nowrap\">\r\n                <a class=\"nav-link\" href=\"#\">Sair</a>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <nav class=\"col-md-2 d-none d-md-block bg-light sidebar\">\r\n                <div class=\"sidebar-sticky\">\r\n                    <ul class=\"nav flex-column\">\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link active\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-home\">\r\n                                    <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\r\n                                    <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\r\n                                </svg>\r\n                                Home <span class=\"sr-only\">(current)</span>\r\n                            </a>\r\n                        </li>\r\n\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-shopping-cart\">\r\n                                    <circle cx=\"9\" cy=\"21\" r=\"1\"></circle>\r\n                                    <circle cx=\"20\" cy=\"21\" r=\"1\"></circle>\r\n                                    <path d=\"M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6\"></path>\r\n                                </svg>\r\n                                Shop\r\n                            </a>\r\n                        </li> -->\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-users\">\r\n                                    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\r\n                                    <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\r\n                                    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\r\n                                    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\r\n                                </svg>\r\n                                Customers\r\n                            </a>\r\n                        </li> -->\r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-bar-chart-2\">\r\n                                    <line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line>\r\n                                    <line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line>\r\n                                    <line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line>\r\n                                </svg>\r\n                                Reports\r\n                            </a>\r\n                        </li> -->\r\n                    </ul>\r\n\r\n                    <h6\r\n                        class=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\r\n                        <span>Análise de Efeitos de Falha</span>\r\n                        <a class=\"d-flex align-items-center text-muted\" href=\"#\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                                width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"\r\n                                stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                class=\"feather feather-plus-circle\">\r\n                                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                                <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line>\r\n                                <line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line>\r\n                            </svg>\r\n                        </a>\r\n                    </h6>\r\n                    <ul class=\"nav flex-column mb-2\">\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-file\">\r\n                                    <path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path>\r\n                                    <polyline points=\"13 2 13 9 20 9\"></polyline>\r\n                                </svg>\r\n                                Cadastrar falha\r\n                            </a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-layers\">\r\n                                    <polygon points=\"12 2 2 7 12 12 22 7 12 2\"></polygon>\r\n                                    <polyline points=\"2 17 12 22 22 17\"></polyline>\r\n                                    <polyline points=\"2 12 12 17 22 12\"></polyline>\r\n                                </svg>\r\n                                Listar falhas\r\n                            </a>\r\n                        </li>\r\n                        \r\n                        <!-- <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\" class=\"feather feather-file-text\">\r\n                                    <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n                                    <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n                                    <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\r\n                                    <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\r\n                                    <polyline points=\"10 9 9 9 8 9\"></polyline>\r\n                                </svg>\r\n                                Year-end sale\r\n                            </a>\r\n                        </li> -->\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n            <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\r\n                <div class=\"chartjs-size-monitor\"\r\n                    style=\"position: absolute; inset: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;\">\r\n                    <div class=\"chartjs-size-monitor-expand\"\r\n                        style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;\">\r\n                        <div style=\"position:absolute;width:1000000px;height:1000000px;left:0;top:0\"></div>\r\n                    </div>\r\n                    <div class=\"chartjs-size-monitor-shrink\"\r\n                        style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;\">\r\n                        <div style=\"position:absolute;width:200%;height:200%;left:0; top:0\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container mt-4\">\r\n                    <router-outlet></router-outlet>\r\n                </div>\r\n\r\n            </main>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Descrição sobre o SITE FMEA</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                Descrição sobre o SITE FMEADescrição sobre o SITE FMEADescrição sobre o SITE FMEADescrição sobre o SITE\r\n                FMEADescrição sobre o SITE FMEADescrição sobre o SITE FMEADescrição sobre o SITE FMEADescrição sobre o\r\n                SITE FMEA\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-inicio',\r\n  templateUrl: './inicio.component.html',\r\n  styleUrls: ['./inicio.component.css']\r\n})\r\nexport class InicioComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n        <div class=\"row mt-5\">\r\n            <div class=\"title col-sm \">\r\n                <h1>Software de Análise de Modos de Falha e seus Efeitos.</h1>\r\n                <p>\r\n                    A sigla FMEA significa “Failure Mode and Effect Analysis”. E o que é FMEA, na tradução para o\r\n                    português?\r\n                    Análise de Modos de Falha e seus Efeitos.\r\n                </p>\r\n                <p>\r\n                    Trata-se de uma metodologia que permite analisar possíveis falhas e o que sua ocorrência poderia\r\n                    causar\r\n                    dentro de uma indústria. Identifica, também, ações prioritárias de melhoria.\r\n                </p>\r\n                <p>\r\n                    O FMEA se popularizou como uma ferramenta útil para garantir segurança e eficiência em seus dois\r\n                    tipos\r\n                    possíveis:\r\n\r\n                    <br><br>\r\n\r\n                    <b>Produtos:</b> FMEA aplicado sobre as falhas de produto, que saem do padrão e das especificações\r\n                    definidas em\r\n                    um projeto;\r\n\r\n                    <br>\r\n\r\n                    <b>Processos:</b> FMEA aplicado sobre as falhas de processo, desde seu planejamento, e que\r\n                    geralmente\r\n                    são\r\n                    observadas após identificadas as não conformidades em produtos.\r\n                </p>\r\n            </div>\r\n            <div class=\"image col-sm\">\r\n                <img src=\"../../../assets/img/fmea1.jpg\" alt=\"Enfermeira\" class=\"img-fluid mr-5 rounded\">\r\n            </div>\r\n        </div>\r\n        <div class=\"row mt-5\">\r\n            <div class=\"image col-sm\">\r\n                <img src=\"../../../assets/img/fmea6.jpeg\" alt=\"Doutora\" class=\"img-fluid mr-5 rounded\">\r\n            </div>\r\n            <div class=\"title col-sm mt-5\">\r\n                <h1>Onde e como aplicar?</h1>\r\n                <p>\r\n                    O FMEA sempre é utilizado para melhorar processos ou produtos, seja com base em falhas\r\n                    pré-existentes ou\r\n                    para evitar a ocorrência de falhas potenciais.\r\n                </p>\r\n                <p>\r\n                    Em projetos de novos processos ou produtos, também pode ser interessante para definir\r\n                    antecipadamente a\r\n                    probabilidade de falhas e evitar diferentes tipos de problema.\r\n                </p>\r\n                <p>\r\n                    <b>Primeiramente, você precisará identificar os possíveis modos de falha.</b> Os dados devem ser os\r\n                    mais reais\r\n                    possíveis, vindos da engenharia ou do campo.\r\n\r\n                    Em seguida, <b>irá analisar os riscos de cada modo de falha.</b>\r\n                </p>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { UserService } from '../user/user.service';\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService{\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private userService: UserService\r\n      ) { }\r\n    \r\n      authenticate(usuario: string, senha: string){\r\n        return this.http\r\n          .post(API + 'logon', {\"usuario\":usuario, \"senha\":senha}, { observe: 'response'}) //coloque a rota de login da sua api\r\n          .pipe(tap(res => {\r\n            const authToken = res.headers.get('x-access-token');\r\n            this.userService.setToken(authToken);\r\n            console.log(`Usuário ${usuario} autenticado com o token ${authToken}`);\r\n          })\r\n        );\r\n      }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n// informe a key que será salva no localhost\r\nconst KEY = 'authTokenPlanoTerapeutico';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class TokenService{\r\n    hasToken(){\r\n        return !!this.getToken(); //!! é utilizado para converter valores em booleanos\r\n    }\r\n\r\n    setToken(token){\r\n        window.localStorage.setItem(KEY, token);\r\n    }\r\n\r\n    getToken(){\r\n        return window.localStorage.getItem(KEY);\r\n    }\r\n\r\n    removeToken(){\r\n        return window.localStorage.removeItem(KEY);\r\n    }\r\n}","import { Falha } from './../../falha/falha';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ConfirmationDialogService } from \"src/app/compartilhado/componentes/confirmation-dialog/confirmation-dialog.service\";\r\nimport { Login } from \"src/app/core/login/login/login\";\r\nimport { LoginService } from \"src/app/core/login/login/login.service\";\r\nimport { Plano } from \"../plano\";\r\nimport { PlanoService } from \"../plano.service\"\r\n\r\n@Component({\r\n    selector: 'app-lista-plano',\r\n    templateUrl: './lista-plano.component.html',\r\n    styleUrls: ['./lista-plano.component.css'],\r\n    providers: [ConfirmationDialogService]\r\n})\r\n\r\nexport class ListaPlanoComponent implements OnInit{\r\n    \r\n    Falhas: Falha[] = []\r\n    Plano: Plano[] = []\r\n    listaEventoForm: FormGroup\r\n    login: Login\r\n    displayedColumns: string[]\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private router: Router,\r\n        private PlanoService: PlanoService,\r\n        private loginService: LoginService\r\n\r\n    ) { }\r\n\r\n    ngOnInit(){\r\n        this.pesquisaTodos();\r\n        setInterval(() => this.pesquisaTodos(), 7000);\r\n\r\n        this.loginService.getUser().subscribe(result => {\r\n            this.login = result;\r\n        })\r\n\r\n        this.displayedColumns = ['descricao','ocorrencia', 'status', 'opcoes']\r\n\r\n        /* if(this.login.perfil == 'adm'){\r\n            this.displayedColumns = ['paciente','evento', 'opcoes']\r\n        }else{\r\n            this.displayedColumns = ['paciente', 'evento']            \r\n        } */\r\n        \r\n        this.listaEventoForm = this.formBuilder.group({\r\n            pesquisarTodos: ['']\r\n        })\r\n\r\n    }\r\n    \r\n    pesquisaTodos(){\r\n        this.PlanoService.getIdEquals().subscribe(result => {this.Falhas = result})\r\n    }\r\n\r\n    showPlanoInfo(id){\r\n        this.PlanoService.getPlanoById(id).subscribe(result => { this.Plano = result})\r\n    }\r\n\r\n    alterarStatus(id, status){\r\n        this.PlanoService.updateStatus(id, status).subscribe()      \r\n        window.alert('Status Alterado!')\r\n    }\r\n\r\n}","<div class=\"container \">\r\n    <form [formGroup]=\"listaEventoForm\" novalidate>\r\n      \r\n      \r\n      <div class=\"row mt-5\">\r\n        <div class=\"title col-sm mt-4\">\r\n          <h1>Lista de Planos:</h1>\r\n          <h4 style=\"font-weight: bold; color: red\">Atenção!</h4>\r\n          <p>Os plano são organizados por prioridade, partindo do mais urgente ao menos urgente.</p>\r\n        </div>\r\n      </div>\r\n      <table mat-table [dataSource]=\"Falhas\" class=\"mat-elevation-z8 text-center\">\r\n  \r\n        Coluna Nome\r\n        <ng-container matColumnDef=\"descricao\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Descrição </th>\r\n          <td mat-cell *matCellDef=\"let descricao\"> {{descricao.descricaoFalha}} </td>\r\n        </ng-container>\r\n  \r\n        Coluna Evento\r\n        <ng-container matColumnDef=\"ocorrencia\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Ocorrência </th>\r\n          <td mat-cell *matCellDef=\"let ocorrencia\"> {{ocorrencia.causaFalha}} </td>\r\n        </ng-container>\r\n  \r\n        Coluna Opções\r\n        <ng-container matColumnDef=\"status\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Status </th>\r\n          <td mat-cell *matCellDef=\"let status\">{{status.status_plano}}</td>\r\n        </ng-container>\r\n  \r\n        Coluna Opções\r\n        <ng-container matColumnDef=\"opcoes\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Opções </th>\r\n          <td mat-cell class=\"option\" *matCellDef=\"let opcoes\" title=\"Criar plano de ação\">\r\n            <img src=\"../../../assets/img/analytic.png\" (click)=\"showPlanoInfo(opcoes.fk_id_falha)\" data-toggle=\"modal\"\r\n              data-target=\"#exampleModal\">\r\n          </td>\r\n        </ng-container>\r\n  \r\n  \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </form>\r\n  </div>\r\n  \r\n  \r\n  \r\n  \r\n  <!-- Modal -->\r\n  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" data-backdrop=\"false\" role=\"dialog\"\r\n    aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <mat-accordion >\r\n            <mat-expansion-panel *ngFor=\"let plano of Plano\" [expanded]=\"plano\">\r\n              <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                  <label>Descrição do Plano:</label>{{plano.plano_acao}}\r\n  \r\n                </mat-panel-title>\r\n                <mat-panel-title>\r\n                  <label>Status:</label>{{plano.status_plano}}\r\n                </mat-panel-title>\r\n              </mat-expansion-panel-header>\r\n              <div class=\"container\">\r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Nome do Responsável:</label>\r\n                    {{plano.responsavel}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Objetivo:</label>\r\n                    {{plano.objetivo}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">O quê? (What?)</label>\r\n                    {{plano.o_que}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Por que? (Why?)</label>\r\n                    {{plano.por_que}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Onde? (Where?)</label>\r\n                    {{plano.onde}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Quem? (Who?)</label>\r\n                    {{plano.quem}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Quando? (When?)</label>\r\n                    {{plano.quando | date: 'dd/MM/YYYY'}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Como? (How?)</label>\r\n                    {{plano.como}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Quanto? (How much?)</label>\r\n                    {{plano.quanto}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <!-- <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Status:</label>\r\n                    {{plano.status_plano}}\r\n                  </div>\r\n                </div> -->\r\n  \r\n  \r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <label class=\"form-control-label\">Prioridade:</label>\r\n                    {{plano.prioridade}}\r\n                  </div>\r\n                </div>\r\n  \r\n                <div class=\"row\" *ngIf=\"login.perfil === 'adm'\">\r\n                  <div class=\"col-md-3 offset-md-3\"></div>\r\n                  <div class=\"col-md-3 offset-md-3 dropup\">\r\n                    <button id=\"btnGroupDrop1\" type=\"button\" class=\"btn btn-primary dropdown-toggle\"\r\n                      data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                      Alterar Status\r\n                    </button>\r\n                    <div class=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\r\n                      <div class=\"form-check mx-2\" (click)=\"alterarStatus(plano.id, 'A fazer')\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\">\r\n                        <label style=\"font-weight: 200;\" class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                          A fazer\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"form-check mx-2\" (click)=\"alterarStatus(plano.id, 'Fazendo')\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\">\r\n                        <label style=\"font-weight: 200;\" class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                          Fazendo\r\n                        </label>\r\n                      </div>\r\n                      <div class=\"form-check mx-2\" (click)=\"alterarStatus(plano.id, 'Feito')\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault3\">\r\n                        <label style=\"font-weight: 200;\" class=\"form-check-label\" for=\"flexRadioDefault3\">\r\n                          Feito\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n  \r\n              </div>\r\n            </mat-expansion-panel>\r\n            <br>\r\n          </mat-accordion>\r\n  \r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Fechar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { PlanoModule } from './plano/plano.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { CoreModule } from './core/core.module';\r\nimport { AppRoutingModule } from './app.routing.module';\r\nimport { HomeModule } from './home/home.module';\r\nimport { MaterialModule } from './compartilhado/componentes/material/material.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FalhaModule } from './falha/falha.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    HomeModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    CommonModule,\r\n    FalhaModule,\r\n    PlanoModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { MaterialModule } from '../compartilhado/componentes/material/material.module';\r\nimport { InicioComponent } from './inicio/inicio.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        HomeComponent,\r\n        HeaderComponent,\r\n        InicioComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        BrowserModule,\r\n        FormsModule,\r\n        MaterialModule,\r\n    ]\r\n})\r\nexport class HomeModule{\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CadFalhaComponent } from './cad-falha/cad-falha.component';\r\nimport { ListaFalhaComponent } from './lista-falha/lista-falha.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from '../app.routing.module';\r\nimport { MaterialModule } from '../compartilhado/componentes/material/material.module';\r\nimport { CoreModule } from '../core/core.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [CadFalhaComponent, ListaFalhaComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n  ]\r\n})\r\nexport class FalhaModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppMsgErroComponent } from './app-msg-erro.component';\r\n\r\n@NgModule({\r\n    declarations: [AppMsgErroComponent],\r\n    imports: [CommonModule],\r\n    exports: [AppMsgErroComponent]\r\n})\r\nexport class AppMsgErroModule{}","import { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Falha } from '../falha';\r\nimport { FalhaService } from '../falha.service';\r\n\r\n@Component({\r\n  selector: 'app-lista-falha',\r\n  templateUrl: './lista-falha.component.html',\r\n  styleUrls: ['./lista-falha.component.css']\r\n})\r\nexport class ListaFalhaComponent implements OnInit {\r\n\r\n  listaFalhaForm: FormGroup\r\n  Falhas: Falha[] = []\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private FalhaService: FalhaService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retornarFalhas()\r\n  }\r\n\r\n  retornarFalhas() {\r\n    this.FalhaService.retornarFalha().subscribe(res => { this.Falhas = res })\r\n  }\r\n\r\n  addPlanoAcao(id){\r\n    this.router.navigate(['/home/cadastrar/plano', id]);\r\n   //console.log(id)\r\n}\r\n\r\n}\r\n","<div class=\"container\">\r\n    <form #listaFalhaForm=\"ngForm\" novalidate>\r\n        <div class=\"title col-sm mt-4\">\r\n            <h1>Falhas contidas no sistema.</h1>\r\n            <p>Expanda os campos para mais informações.</p>\r\n        </div>\r\n        <mat-accordion>\r\n            <mat-expansion-panel *ngFor=\"let falha of Falhas\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        {{falha.causaFalha}}\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                        {{falha.dataFalha | date: 'dd/MM/yyyy'}} | Duração: {{falha.duracaoFalha}}\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col-4\">\r\n                        <label class=\"form-control-label font-weight-bold\">Setor:</label>\r\n                        {{falha.setorFalha}}\r\n                    </div>\r\n                    <div class=\"col-3\">\r\n                        <label class=\"form-control-label font-weight-bold\">Sala:</label>\r\n                        {{falha.salaFalha}}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col-3\">\r\n                        <label class=\"form-control-label font-weight-bold\">Hora de Início:</label>\r\n                        {{falha.horaInicio | date: 'HH:mm':'+0'}}\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <label class=\"form-control-label font-weight-bold\">Hora do Fim:</label>\r\n                        {{falha.horaFim | date: 'HH:mm':'+0'}}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col-5\">\r\n                        <label class=\"form-control-label font-weight-bold\">Causa da Falha:</label>\r\n                        {{falha.causaFalha}}\r\n                    </div>\r\n                    <div class=\"col-4\">\r\n                        <label class=\"form-control-label font-weight-bold\">Efeito da Falha:</label>\r\n                        {{falha.efeitoFalha}}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col\">\r\n                        <label class=\"form-control-label font-weight-bold\">Descrição da Falha (Caso houver):</label>\r\n                        {{falha.descricaoFalha}}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col\">\r\n                        <button type=\"button\" class=\"btn btn-warning\" (click)=\"addPlanoAcao(falha.id)\">Plano de ação</button>\r\n                    </div>\r\n                </div>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n    </form>\r\n</div>","import { EMPTY } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Falha } from './falha';\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FalhaService {\r\n\r\n  constructor(\r\n\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  novaFalha(falha: Falha) {\r\n    return this.http.post(`${API}falha`, falha).pipe(take(1))\r\n  }\r\n\r\n  retornarFalha(){\r\n    return this.http.get<Falha[]>(`${API}falha`)\r\n  }\r\n\r\n  getIdFalha(id){\r\n    if(!id) return EMPTY;\r\n    return this.http.get<Falha>(`${API}falha/${id}`).pipe(take(1));\r\n  }\r\n\r\n}\r\n","import { CadPlanoComponent } from './plano/cad-plano/cad-plano.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './core/login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginGuard } from './core/auth/login.guard';\r\nimport { AuthGuard } from './core/auth/auth.guard';\r\nimport { InicioComponent } from './home/inicio/inicio.component';\r\nimport { CadFalhaComponent } from './falha/cad-falha/cad-falha.component';\r\nimport { ListaFalhaComponent } from './falha/lista-falha/lista-falha.component';\r\nimport { ListaPlanoComponent } from './plano/lista-plano/lista-plano.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'login',\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        canActivate: [LoginGuard]\r\n    },\r\n    {\r\n        path: 'home',\r\n        component: HomeComponent,\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: InicioComponent\r\n            },\r\n            {\r\n                path: 'cadastrar/falha',\r\n                component: CadFalhaComponent\r\n            },\r\n            {\r\n                path: 'listar/falhas',\r\n                component: ListaFalhaComponent\r\n            },\r\n            {\r\n                path: 'cadastrar/plano',\r\n                component: CadPlanoComponent\r\n            },\r\n            {\r\n                path: 'cadastrar/plano/:id',\r\n                component: CadPlanoComponent\r\n            },\r\n            {\r\n                path: 'lista/plano',\r\n                component: ListaPlanoComponent\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [ \r\n        RouterModule.forRoot(routes, { useHash: true, relativeLinkResolution: 'legacy' } ) \r\n    ],\r\n    exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule{\r\n    \r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AppMsgErroModule } from '../compartilhado/componentes/app-msg-erro/app-msg-erro.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RequestInterceptor } from './auth/request.interceptor';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LoginComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        AppMsgErroModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: RequestInterceptor,\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class CoreModule{\r\n\r\n}","\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-msg-erro',\r\n    templateUrl: './app-msg-erro.component.html'\r\n})\r\nexport class AppMsgErroComponent{\r\n\r\n    @Input() mensagem: string = ''\r\n    \r\n}","<div class=\"text-danger d-block mt-2\">\r\n    {{ mensagem }}\r\n </div>","import { Injectable } from '@angular/core';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog.component';\r\n\r\n@Injectable()\r\nexport class ConfirmationDialogService {\r\n\r\n  constructor(private modalService: NgbModal) { }\r\n\r\n  public confirm(\r\n    title: string,\r\n    message: string,\r\n    btnOkText: string = 'Confirmar',\r\n    btnCancelText: string = 'Cancelar',\r\n    dialogSize: 'sm'|'lg' = 'sm'): Promise<boolean> {\r\n    const modalRef = this.modalService.open(ConfirmationDialogComponent, { size: dialogSize });\r\n    modalRef.componentInstance.title = title;\r\n    modalRef.componentInstance.message = message;\r\n    modalRef.componentInstance.btnOkText = btnOkText;\r\n    modalRef.componentInstance.btnCancelText = btnCancelText;\r\n\r\n    return modalRef.result;\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor } from \"@angular/common/http\";\r\nimport { HttpRequest } from \"@angular/common/http\";\r\nimport { HttpHandler } from \"@angular/common/http\";\r\nimport { Observable, throwError as observableThrowError } from \"rxjs\";\r\nimport { HttpSentEvent } from \"@angular/common/http\";\r\nimport { HttpHeaderResponse } from \"@angular/common/http\";\r\nimport { HttpProgressEvent } from \"@angular/common/http\";\r\nimport { HttpResponse } from \"@angular/common/http\";\r\nimport { HttpUserEvent } from \"@angular/common/http\";\r\nimport { environment } from '../../../environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { TokenService } from \"../token/token.service\";\r\nimport { UserService } from '../user/user.service';\r\n\r\nconst API = environment.apiUrl;\r\n\r\n@Injectable()\r\nexport class RequestInterceptor implements HttpInterceptor {\r\n    \r\n    constructor(\r\n        private tokenService: TokenService,\r\n        private userService: UserService,\r\n        private router: Router\r\n    ) {}\r\n\r\n    // intercepta cada requisição feita web para a api, verifica o token, clona e envia para a api\r\n    \r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpSentEvent \r\n        | HttpHeaderResponse | HttpProgressEvent | HttpResponse<any> | HttpUserEvent<any>> {\r\n            \r\n            if (req.url == `${API}login`) {\r\n                return next.handle(req);\r\n            }\r\n       \r\n            if(this.tokenService.hasToken()) {\r\n                const token = this.tokenService.getToken();\r\n                req = req.clone({\r\n                    setHeaders: {\r\n                        'x-access-token': token\r\n                    }\r\n                });\r\n            }\r\n            return next.handle(req)\r\n                .pipe(\r\n                    catchError(err => {\r\n                        if(err.status === 401){\r\n                            console.log('entrou');\r\n                            this.userService.logout();\r\n                            this.router.navigate(['login']);\r\n                            alert('Sua sessão expirou');\r\n                            return observableThrowError(err);\r\n                        }\r\n                    })\r\n                )\r\n            ;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport * as jtw_decode from 'jwt-decode';\r\n\r\nimport { User } from './user';\r\nimport { TokenService } from '../token/token.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class UserService{\r\n\r\n    user: User;\r\n\r\n    // assim que inicia o serviço, verifica se existe o token e faz a decodificação\r\n    constructor(private tokenService: TokenService){\r\n        this.tokenService.hasToken() &&\r\n        this.decodeAndNotify();\r\n    }\r\n\r\n    setToken(token: string){\r\n        this.tokenService.setToken(token);\r\n        this.decodeAndNotify();\r\n    }\r\n\r\n    getUser(){\r\n        return this.user;\r\n    }\r\n\r\n    private decodeAndNotify(){\r\n        const token = this.tokenService.getToken();\r\n        this.user = jtw_decode(token) as User;\r\n    }\r\n\r\n    logout(){\r\n        this.tokenService.removeToken();\r\n        this.user = null;\r\n    }\r\n\r\n    isLogged(){\r\n        return this.tokenService.hasToken();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { UserService } from '../user/user.service';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root'})\r\nexport class LoginGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router) {}\r\n\r\n    /* Guarda de rotas utilizada para retornar para a página inicial, caso o usuário já estiver logado */\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot, \r\n        state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n            \r\n            if(this.userService.isLogged()){\r\n                this.router.navigate(['home'])\r\n                return false;\r\n            }\r\n            return true;\r\n    }\r\n}","// IMPORT ALL MATERIAL COMPONENTS\r\n// #STEPS\r\n// 1- Import this file as module in app.module.ts ==> import { MaterialModule } from './xyz/abc';\r\n// 2- Initialize it in imports:[] array ==> imports:[MaterialModule]\r\n\r\nimport { NgModule } from '@angular/core';\r\n// *************** FORM CONTROLS ***************\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport{MatNativeDateModule} from '@angular/material/core'             //FROM ANGULAR CORE\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\n\r\n// *************** NAVIGATION ***************\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\n\r\n// *************** LAYOUT ***************\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n// *************** BUTTONS & INDICATORS ***************\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatRippleModule} from '@angular/material/core';\r\n\r\n// *************** POPUPS & MODALS ***************\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\n// *************** DATA TABLE ***************\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\n\r\n\r\nconst AllMaterialModules=[\r\n  MatAutocompleteModule,\r\n  MatCheckboxModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatMenuModule,\r\n  MatSidenavModule,\r\n  MatToolbarModule,\r\n  MatCardModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatListModule,\r\n  MatStepperModule,\r\n  MatTabsModule,\r\n  MatTreeModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatBadgeModule,\r\n  MatChipsModule,\r\n  MatIconModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  MatRippleModule,\r\n  MatBottomSheetModule,\r\n  MatDialogModule,\r\n  MatSnackBarModule,\r\n  MatTooltipModule,\r\n  MatPaginatorModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [AllMaterialModules],\r\n  exports: [AllMaterialModules],\r\n})\r\nexport class MaterialModule {}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}